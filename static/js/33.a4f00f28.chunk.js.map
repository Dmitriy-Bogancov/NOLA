{"version":3,"file":"static/js/33.a4f00f28.chunk.js","mappings":"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","sources":["components/HandleFormConfig/HandleFormConfig.jsx","webpack://nola/./src/pages/AddPostPage/AddPostPage.module.css?cb7e","pages/AddPostPage/AddPostPage.jsx","services/ToastError/ToastError.js","services/Toastify/Toastify.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { useEffect } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport const HandleFormConfig = ({ message, navigatePage }) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    Toastify(`${message}`);\r\n    setTimeout(() => {\r\n      navigate(navigatePage, { replace: true })\r\n    },  3000);\r\n  }, [message, navigate, navigatePage]);\r\n\r\n  return <ToastContainer />;\r\n};\r\n\r\nHandleFormConfig.propTypes = {\r\n  message: PropTypes.string,\r\n  navigatePage: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"AddPostPage_banner__N26IO\"};","import { useState } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { postPostApi } from \"../../services/https/https\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport css from \"./AddPostPage.module.css\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { HandleFormConfig } from \"../../components/HandleFormConfig/HandleFormConfig\";\r\n\r\nconst AddPostPage = () => {\r\n  const location = useLocation();\r\n  const [addPostPhoto, setAddPostPhoto] = useState(false);\r\n  const [selestedFile, setSelestedFile] = useState(false);\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [formatPost, setFormatPost] = useState(null);\r\n  const [formConfig, setFormConfig] = useState(false);\r\n  const [post, setPost] = useState({\r\n    description: \"\",\r\n    title: \"\",\r\n    banner: \"https://img.freepik.com/premium-photo/nelle-vie-di-milano_1048944-5187462.jpg\",\r\n  });\r\n\r\n  const handleAddPost = () => {\r\n    setAddPostPhoto(true);\r\n  };\r\n\r\n  const handleChangePost = ({ target }) => {\r\n    const { name, value } = target;\r\n    setPost({\r\n      ...post,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { files } = target;\r\n\r\n    const imgFormat = files[0].type.split(\"/\").splice(1, 1).join();\r\n    const acceptFormat = target.accept.split(\",.\");\r\n\r\n    const results = acceptFormat.find((el) => el === imgFormat);\r\n\r\n    if (results) {\r\n      Toastify(\"Photo downloÐ°ding\");\r\n      setSelestedFile(results);\r\n\r\n      return;\r\n    }\r\n    Toastify(\"Photo has not suitable format\");\r\n  };\r\n\r\n  const handleUploadClick = () => {\r\n    if (!selestedFile) {\r\n      Toastify(\"Please select a file\");\r\n      return;\r\n    }\r\n\r\n    const formAddPostPhoto = new FormData();\r\n    // file ?\r\n    formAddPostPhoto.append(\"file\", selestedFile);\r\n    setUploaded(true);\r\n    setPost({\r\n      ...post,\r\n      banner: formAddPostPhoto,\r\n    });\r\n\r\n    // const res = await fetch(\"\", {method: \"POST\", body: formAddPostPhoto, Authorization: {}})\r\n    // const data = await res.json()\r\n    // setUploaded(data)\r\n\r\n    setAddPostPhoto(false);\r\n  };\r\n\r\n  const handleSubmitPost = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n    const data =  await postPostApi(post);\r\n\r\n      // setUploaded(data)\r\n      \r\n      setFormConfig(true);\r\n    } catch (error) {\r\n     ToastError(error?.response?.statusText || error.message);\r\n    }\r\n\r\n    setPost({ banner: \"\", description: \"\" , title: \"\"});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      {formConfig && (\r\n        <HandleFormConfig\r\n          message={\"Sucsessfull add a new advertisement\"}\r\n          navigatePage={\"/main/accountAdverticer\"}\r\n        />\r\n      )}\r\n      {addPostPhoto && (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            value={formatPost}\r\n            accept=\"image/*  ,.png,.jpg,.jpeg,.gif,.webp,.svg,.pdf\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button onClick={handleUploadClick}>Upload now</button>\r\n        </>\r\n      )}\r\n      <form onSubmit={handleSubmitPost}>\r\n        <button type=\"button\" onClick={handleAddPost}>\r\n          Add Bunner\r\n        </button>\r\n\r\n        {selestedFile && <ul></ul>}\r\n\r\n        {uploaded && (\r\n          <div>\r\n            <h2></h2>\r\n            <img src=\"\" alt=\"\" className={css.banner} />\r\n          </div>\r\n        )}\r\n\r\n        <input type=\"text\" name=\"title\" value={post.title} onChange={handleChangePost}/>\r\n\r\n        <textarea\r\n          name=\"description\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          value={post.description}\r\n          onChange={handleChangePost}\r\n        ></textarea>\r\n        <div>\r\n          <ul>\r\n            <li>\r\n              <NavLink\r\n                to=\"/main/accountAdverticer/adverticerEdit/links/addLinks\"\r\n                state={location}\r\n              >\r\n                Link\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink\r\n                to=\"/main/accountAdverticer/adverticerEdit/links/addLinks\"\r\n                state={location}\r\n              >\r\n                Link\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink\r\n                to=\"/main/accountAdverticer/adverticerEdit/links/addLinks\"\r\n                state={location}\r\n              >\r\n                Link\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n\r\n          <NavLink to=\"previewAdvertisemet\">\r\n            <button>Preview</button>\r\n          </NavLink>\r\n          <button>Confirm </button>\r\n        </div>\r\n      </form>\r\n      <NavLink to=\"/main\">\r\n        <button type=\"button\">Cancel</button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostPage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const ToastError = (message) => {\r\n  toast.error(`${message}`, {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["HandleFormConfig","_ref","message","navigatePage","navigate","useNavigate","useEffect","Toastify","concat","setTimeout","replace","_jsx","ToastContainer","AddPostPage","location","useLocation","addPostPhoto","setAddPostPhoto","useState","selestedFile","setSelestedFile","uploaded","setUploaded","formatPost","setFormatPost","formConfig","setFormConfig","post","setPost","description","title","banner","handleChangePost","target","name","value","_jsxs","children","_Fragment","type","accept","onChange","_ref2","files","imgFormat","split","splice","join","results","find","el","onClick","handleUploadClick","formAddPostPhoto","FormData","append","onSubmit","async","e","preventDefault","postPostApi","error","_error$response","ToastError","response","statusText","handleAddPost","src","alt","className","css","cols","rows","NavLink","to","state","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}