{"version":3,"file":"static/js/33.a0a92319.chunk.js","mappings":"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","sources":["webpack://nola/./src/components/GoBackButton/GoBackButton.module.css?1091","components/GoBackButton/GoBackButton.jsx","components/HandleFormConfig/HandleFormConfig.jsx","webpack://nola/./src/components/MessagePostOnModeration/MessagePostOnModeration.module.css?b775","assets/icons/checked.svg","components/MessagePostOnModeration/MessagePostOnModeration.jsx","webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://nola/./src/pages/AddPostPage/AddPostPage.module.css?cb7e","pages/AddPostPage/AddPostPage.jsx","services/Toastify/Toastify.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"GoBackButton_goBack__sMPM4\",\"titleRecovery\":\"GoBackButton_titleRecovery__jxfe9\"};","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport css from \"./GoBackButton.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GoBackButton = ({\r\n  to,\r\n  title,\r\n  imgSrc,\r\n  imgAlt,\r\n  imgWidth,\r\n  imgHeight,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <div className={css.goBack}>\r\n      <Link to={to} onClick={onClick}>\r\n        <img src={imgSrc} alt={imgAlt} width={imgWidth} height={imgHeight} />\r\n      </Link>\r\n      <h3 className={`${css.titleRecovery} dark:text-white`}>{title}</h3>\r\n    </div>\r\n  );\r\n};\r\nGoBackButton.propTypes = {\r\n  to: PropTypes.string,\r\n  title: PropTypes.string,\r\n  imgSrc: PropTypes.string.isRequired,\r\n  imgAlt: PropTypes.string.isRequired,\r\n  imgWidth: PropTypes.string,\r\n  imgHeight: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default GoBackButton;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { useEffect } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport const HandleFormConfig = ({ message, navigatePage }) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    Toastify(`${message}`);\r\n    setTimeout(() => {\r\n      navigate(navigatePage, { replace: true })\r\n    },  3000);\r\n  }, [message, navigate, navigatePage]);\r\n\r\n  return <ToastContainer />;\r\n};\r\n\r\nHandleFormConfig.propTypes = {\r\n  message: PropTypes.string,\r\n  navigatePage: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"checked_container\":\"MessagePostOnModeration_checked_container__2SyNn\",\"description\":\"MessagePostOnModeration_description__19Kgo\"};","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgChecked(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 80,\n    height: 80,\n    viewBox: \"0 0 80 80\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40 0C17.92 0 0 17.92 0 40C0 62.08 17.92 80 40 80C62.08 80 80 62.08 80 40C80 17.92 62.08 0 40 0ZM40 72C22.36 72 8 57.64 8 40C8 22.36 22.36 8 40 8C57.64 8 72 22.36 72 40C72 57.64 57.64 72 40 72ZM58.36 22.32L32 48.68L21.64 38.36L16 44L32 60L64 28L58.36 22.32Z\",\n    fill: \"#ECCD43\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgChecked);\nexport default __webpack_public_path__ + \"static/media/checked.be3d76171987d08d22f337ee06d1e8e5.svg\";\nexport { ForwardRef as ReactComponent };","import css from \"./MessagePostOnModeration.module.css\";\r\nimport checked from \"../../assets/icons/checked.svg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const MessagePostOnModeration = ({ children }) => {\r\n  return (\r\n    <div className={css.checked_container}>\r\n      <img src={checked} alt=\"checked\" />\r\n      <p className={`${css.description} dark:text-white `}>{children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessagePostOnModeration.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__2bCFe\",\"modal\":\"Modal_modal__RKlRu\",\"children\":\"Modal_children__HRgbz\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({ children, handleToggleModal }) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div className={css.children}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"top_container\":\"AddPostPage_top_container__cSOWd\",\"title_back\":\"AddPostPage_title_back__LHaNX\",\"btn_container\":\"AddPostPage_btn_container__fKhKO\",\"btn\":\"AddPostPage_btn__+D415\",\"btn_active\":\"AddPostPage_btn_active__lNN3N\",\"btn_disabled\":\"AddPostPage_btn_disabled__97AhZ\",\"btn_back\":\"AddPostPage_btn_back__mzVJr\",\"btn_back_active\":\"AddPostPage_btn_back_active__UG0na\"};","import PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { postPostApi } from \"../../services/https/https\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { nanoid } from \"nanoid\";\r\nimport css from \"./AddPostPage.module.css\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { HandleFormConfig } from \"../../components/HandleFormConfig/HandleFormConfig\";\r\nimport { MessagePostOnModeration } from \"../../components/MessagePostOnModeration/MessagePostOnModeration\";\r\nimport GoBackButton from \"../../components/GoBackButton/GoBackButton\";\r\nimport back from \"../../assets/images/back.jpg\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\nimport { CreatePost } from \"../../components/CreatePost/CreatePost\";\r\n\r\nconst AddPostPage = ({ postEdit, setPostEdit, draftsEdit, setDraftsEdit }) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [formConfig, setFormConfig] = useState(false);\r\n  const [postSuccessfullyAdded, setPostSuccessfullyAdded] = useState(false);\r\n  const [validForm, setValidForm] = useState(false);\r\n  const [links, setLinks] = useState(() => {\r\n    return (\r\n      JSON.parse(localStorage.getItem(\"previewPost\"))?.links || [\r\n        { id: nanoid(), url: \"\", name: \"\" },\r\n      ]\r\n    );\r\n  });\r\n  const [post, setPost] = useState(() => {\r\n    return (\r\n      JSON.parse(localStorage.getItem(\"previewPost\")) ?? // postEdit ??\r\n      // draftsEdit ??\r\n      {\r\n        id: nanoid(),\r\n        description: \"\",\r\n        title: \"\",\r\n        category: \"\",\r\n        subcategory: \"\",\r\n        callToAction: \"\" || \"Read more\",\r\n        callToActionLinks: \"\",\r\n        banners: [],\r\n      }\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"previewPost\", JSON.stringify(post));\r\n  }, [post]);\r\n\r\n  const handleToggleModal = () => {\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  const cancelAddPost = () => {\r\n    localStorage.removeItem(\"previewPost\");\r\n    navigate(\"/main\");\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  const createPostDrafts = async () => {\r\n    try {\r\n      // const data = await postDraftsPost(post)\r\n\r\n      localStorage.setItem(\"backend\", JSON.stringify(post));\r\n\r\n      localStorage.removeItem(\"previewPost\");\r\n      localStorage.removeItem(\"filterCategory\");\r\n      navigate(\"/main\");\r\n      setIsModal((prev) => !prev);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (post.title !== \"\" && post.category !== \"\" && post.subcategory !== \"\") {\r\n      setValidForm(true);\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [post.category, post.subcategory, post.title]);\r\n\r\n  const handleBack = () => {\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  const handleSubmitPost = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"post\", post);\r\n    try {\r\n      // const data = await postPostApi(post);\r\n      setPostSuccessfullyAdded(true);\r\n      localStorage.removeItem(\"previewPost\");\r\n      localStorage.removeItem(\"filterCategory\");\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/main\");\r\n      }, 3000);\r\n    } catch (error) {\r\n      ToastError(error?.response?.statusText || error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!postSuccessfullyAdded && (\r\n        <>\r\n          <ToastContainer />\r\n          {formConfig && (\r\n            <HandleFormConfig\r\n              message={\"Sucsessfull add a new advertisement\"}\r\n              navigatePage={\"/main/accountAdverticer\"}\r\n            />\r\n          )}\r\n          <div onClick={handleBack}>\r\n            <GoBackButton\r\n              to=\"\"\r\n              imgSrc={back}\r\n              imgAlt=\"Go back\"\r\n              title=\"New advertisement\"\r\n            />\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmitPost}>\r\n            <CreatePost\r\n              setPost={setPost}\r\n              post={post}\r\n              links={links}\r\n              setLinks={setLinks}\r\n            />\r\n\r\n            <div className={css.btn_container}>\r\n              <NavLink to=\"/main/addPost/previewAdvertisemet\">\r\n                <button type=\"button\" className={css.btn}>\r\n                  <span className={css.btn_back}> Preview</span>\r\n                </button>\r\n              </NavLink>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className={`${css.btn} ${\r\n                  validForm ? css.btn_active : css.btn_disabled\r\n                }`}\r\n                disabled={validForm ? false : true}\r\n              >\r\n                <span className={css.btn_back_active}>Publish</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      )}\r\n      {isModal && (\r\n        <Modal handleToggleModal={handleToggleModal}>\r\n          <p>Add post to drafts?</p>\r\n          <button type=\"button\" onClick={createPostDrafts}>\r\n            Yes\r\n          </button>\r\n          <button type=\"button\" onClick={cancelAddPost}>\r\n            No\r\n          </button>\r\n        </Modal>\r\n      )}\r\n      {postSuccessfullyAdded && (\r\n        <MessagePostOnModeration>\r\n          Advertisement is under moderation. <br />\r\n          It will take about 15 minutes.\r\n        </MessagePostOnModeration>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostPage;\r\n\r\nAddPostPage.propTypes = {\r\n  postEdit: PropTypes.object,\r\n  setPostEdit: PropTypes.func,\r\n  draftsEdit: PropTypes.object,\r\n  setDraftsEdit: PropTypes.func,\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_ref","to","title","imgSrc","imgAlt","imgWidth","imgHeight","onClick","_jsxs","className","css","children","_jsx","Link","src","alt","width","height","concat","HandleFormConfig","message","navigatePage","navigate","useNavigate","useEffect","Toastify","setTimeout","replace","ToastContainer","MessagePostOnModeration","checked","Modal","handleToggleModal","e","target","currentTarget","postEdit","setPostEdit","draftsEdit","setDraftsEdit","useLocation","isModal","setIsModal","useState","formConfig","setFormConfig","postSuccessfullyAdded","setPostSuccessfullyAdded","validForm","setValidForm","links","setLinks","_JSON$parse","JSON","parse","localStorage","getItem","id","nanoid","url","name","post","setPost","_JSON$parse2","description","category","subcategory","callToAction","callToActionLinks","banners","setItem","stringify","_Fragment","handleBack","prev","GoBackButton","back","onSubmit","async","preventDefault","console","log","removeItem","error","_error$response","ToastError","response","statusText","CreatePost","NavLink","type","disabled","cancelAddPost","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}