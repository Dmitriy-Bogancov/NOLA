{"version":3,"file":"static/js/238.4e0aad25.chunk.js","mappings":"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","sources":["assets/icons/circle-exclamation-mark.svg","webpack://nola/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://nola/./src/components/GoogleButton/GoogleAndFacebookButton.module.css?e16a","components/GoogleButton/GoogleAndFacebookButton.jsx","webpack://nola/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/SignInPage/SignInPage.jsx","services/ToastError/ToastError.js","services/Toastify/Toastify.js"],"sourcesContent":["var _path, _circle, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCircleExclamationMark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 10.0067V10\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8.00008,\n    cy: 8.00008,\n    r: 4.83333,\n    stroke: \"#DA2E2E\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 6V8.33333\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCircleExclamationMark);\nexport default __webpack_public_path__ + \"static/media/circle-exclamation-mark.17ba79873a47e9a43cf4f3584ca4f5b5.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"Button_buttonForm__X-24B\",\"disabled\":\"Button_disabled__jvels\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ label, onClick, disabled }) => {\r\n  return (\r\n    <button className={`${css.buttonForm} ${disabled ? css.disabled : \"\"}`} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"GoogleAndFacebookButton_buttonContainer__XOS+G\",\"buttonForm\":\"GoogleAndFacebookButton_buttonForm__fboKs\",\"separatorLine\":\"GoogleAndFacebookButton_separatorLine__CUteA\",\"orText\":\"GoogleAndFacebookButton_orText__7CdpK\",\"icon\":\"GoogleAndFacebookButton_icon__KaLHd\"};","import React, { useState } from \"react\";\r\nimport { FaFacebook } from \"react-icons/fa\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport css from \"./GoogleAndFacebookButton.module.css\";\r\nimport {  useGoogleLogin } from \"@react-oauth/google\";\r\n\r\nconst GoogleAndFacebookButton = () => {\r\n  const navigate = useNavigate();\r\n  const [redirect, setRedirect] = useState(false); \r\n\r\n  const googleLogin = useGoogleLogin({\r\n    onSuccess: (tokenResponse) => {\r\n      console.log(\"Google login successful\", tokenResponse);\r\n      setRedirect(true); \r\n      navigate(\"/main/accountAdverticer\");\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Google login failed\", error);\r\n    },\r\n  });\r\n\r\n  const handleFacebookSuccess = (response) => {\r\n    console.log(\"Facebook login successful\", response);\r\n    setRedirect(true); \r\n    navigate(\"/main/accountAdverticer\");\r\n  };\r\n\r\n  const handleFacebookFailure = (error) => {\r\n    console.error(\"Facebook login failed\", error);\r\n  };\r\n\r\n  return (\r\n      <div className={css.buttonContainer}>\r\n        <div className={css.separatorLine}></div>\r\n        <div className={`${css.orText} dark:bg-black`}>or</div>\r\n        <button onClick={() => googleLogin()} className={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}>\r\n          <FcGoogle className={css.icon} />\r\n          Continue with Google\r\n        </button>\r\n        <FacebookLogin\r\n          appId=\"366622046395430\"\r\n          autoLoad={false}\r\n          fields=\"name,email,picture\"\r\n          callback={handleFacebookSuccess}\r\n          onFailure={handleFacebookFailure}\r\n          icon={<FaFacebook className={css.icon}/>} \r\n          textButton=\"Continue with Facebook\"\r\n          cssClass={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}\r\n        />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAndFacebookButton;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { FaFacebook } from \"react-icons/fa\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import {jwtDecode} from \"jwt-decode\";\r\n// import css from \"./GoogleAndFacebookButton.module.css\";\r\n// import { FcGoogle } from \"react-icons/fc\";\r\n\r\n// const GoogleAndFacebookButton = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated) {\r\n//       navigate(\"/main/accountAdverticer\");\r\n//     }\r\n//   }, [isAuthenticated, navigate]);\r\n\r\n//   const handleGoogleSuccess = (credentialResponse) => {\r\n//     try {\r\n//       const token = jwtDecode(credentialResponse.credential);\r\n//       console.log(\"Google login successful\", token);\r\n//       setIsAuthenticated(true);\r\n//     } catch (error) {\r\n//       console.error(\"Failed to decode Google token\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleFailure = (error) => {\r\n//     console.error(\"Google login failed\", error);\r\n//   };\r\n\r\n//   const handleFacebookSuccess = (response) => {\r\n//     try {\r\n//       console.log(\"Facebook login successful\", response);\r\n//       setIsAuthenticated(true);\r\n//     } catch (error) {\r\n//       console.error(\"Failed to process Facebook response\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFacebookFailure = (error) => {\r\n//     console.error(\"Facebook login failed\", error);\r\n//   };\r\n\r\n\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId=\"816846792743-3cmg8t2bhfvr19bvu60r65slnrjon8ko.apps.googleusercontent.com\">\r\n//     <div className={css.buttonContainer}>\r\n//       <div className={css.separatorLine}></div>\r\n//       <div className={css.orText}>or</div>\r\n//       <GoogleLogin\r\n//   onSuccess={handleGoogleSuccess}\r\n//   onError={handleGoogleFailure}\r\n// >\r\n//   {({ onClick, disabled }) => (\r\n//     <button className={css.buttonForm} onClick={onClick} disabled={disabled}>\r\n//       <FcGoogle className={css.icon} />\r\n//       Continue with Google\r\n//     </button>\r\n//   )}\r\n// </GoogleLogin>\r\n//       <FacebookLogin\r\n//         appId=\"366622046395430\"\r\n//         autoLoad={false}\r\n//         fields=\"name,email,picture\"\r\n//         callback={handleFacebookSuccess}\r\n//         onFailure={handleFacebookFailure}\r\n//         render={renderProps => (\r\n//           <button onClick={renderProps.onClick} className={css.buttonForm}>\r\n//             <FaFacebook className={css.icon} /> Continue with Facebook\r\n//           </button>\r\n//         )}\r\n//       />\r\n//     </div>\r\n//   </GoogleOAuthProvider>\r\n//   );\r\n// };\r\n\r\n// export default GoogleAndFacebookButton;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"LoginForm_inputForm__pKZga\",\"active\":\"LoginForm_active__m9yTK\",\"link_forgot\":\"LoginForm_link_forgot__PABvy\",\"textForgot\":\"LoginForm_textForgot__-W3Qn\",\"inputContainer\":\"LoginForm_inputContainer__h6NNr\",\"passwordInputContainer\":\"LoginForm_passwordInputContainer__-BjXP\",\"img_error\":\"LoginForm_img_error__r+umH\",\"eyeIcon\":\"LoginForm_eyeIcon__kWAbN\",\"error\":\"LoginForm_error__SKm7v\",\"errorText\":\"LoginForm_errorText__1anjM\",\"btn_text\":\"LoginForm_btn_text__bxMvl\",\"btn_valid\":\"LoginForm_btn_valid__-sQUL\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\nimport css from \"./LoginForm.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginThunk } from \"../../redux/auth/authThunk\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport error from \"../../assets/icons/circle-exclamation-mark.svg\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .matches(/^[^\\s]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^а-яА-ЯіІїЇєЄ]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Please enter a valid email address\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [validForm, setValidForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const validEmail = [\".com\", \".net\", \".ua\"];\r\n\r\n    if (\r\n      validEmail.find((el) => formData?.email?.includes(el)) &&\r\n      formData?.password?.length > 7 &&\r\n      errors?.email?.length === 0 &&\r\n      errors?.password?.length === 0\r\n    ) {\r\n      setValidForm(true);\r\n      return;\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [\r\n    errors?.email?.length,\r\n    errors?.password?.length,\r\n    formData?.email,\r\n    formData?.email?.length,\r\n    formData?.password?.length,\r\n    errors,\r\n  ]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: \"\",\r\n    });\r\n  };\r\n\r\n  const handleTogglePassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleBlur = async (field) => {\r\n    try {\r\n      await schema.validateAt(field, formData);\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: \"\",\r\n      }));\r\n    } catch (validationError) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: validationError.message,\r\n      }));\r\n      setValidForm(false);\r\n    }\r\n  };\r\n\r\n  const getBorderColor = (field) => {\r\n    return errors[field] && \"#DA2E2E\";\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(async () => {\r\n        console.log(\"Form submitted with data:\", formData);\r\n        try {\r\n          await dispatch(loginThunk(formData)).unwrap();\r\n          Toastify(\"SignIn sucsessfull\");\r\n          navigate(\"/main/accountAdverticer\");\r\n        } catch (error) {\r\n          ToastError(error);\r\n        }\r\n      })\r\n\r\n      .catch((validationErrors) => {\r\n        const errorsMap = {};\r\n        validationErrors.inner.forEach((error) => {\r\n          errorsMap[error.path] = error.message;\r\n        });\r\n        setErrors(errorsMap);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={css.inputContainer}>\r\n          <div className={css.errorText}>{errors.email}</div>\r\n          <input\r\n            className={`${css.inputForm}  ${\r\n              errors?.email?.length === 0 ? css.active : \"\"\r\n            } dark:bg-black dark:border-white dark:text-white`}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Username or Email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            onBlur={() => handleBlur(\"email\")}\r\n            style={{\r\n              borderColor: getBorderColor(\"email\"),\r\n              color: getBorderColor(\"email\"),\r\n            }}\r\n          />\r\n          {errors?.email?.length > 1 ? (\r\n            <img src={error} alt=\"\" className={css.img_error} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          <div className={css.errorText}>{errors.password}</div>\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}  ${\r\n                errors?.password?.length === 0 ? css.active : \"\"\r\n              } dark:bg-black dark:border-white dark:text-white`}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"password\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"password\"),\r\n                color: getBorderColor(\"password\"),\r\n              }}\r\n            />\r\n            <div\r\n              className={`${css.eyeIcon} ${\r\n                errors?.password?.length > 1 ? css.error : \"\"\r\n              }`}\r\n              onClick={handleTogglePassword}\r\n            >\r\n              {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <Link to=\"/recovery\" className={css.link_forgot}>\r\n            <p className={css.textForgot}>Forgot password?</p>\r\n          </Link>\r\n        </div>\r\n        <div className={`${css.btn_text} ${validForm ? css.btn_valid : \"\"}`}>\r\n          <Button\r\n            label=\"Sign In\"\r\n            type=\"submit\"\r\n            disabled={validForm ? false : true}\r\n          />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import GoogleAndFacebookButton from \"../../components/GoogleButton/GoogleAndFacebookButton\";\r\nimport LoginForm from \"../../components/LoginForm\";\r\n\r\nconst SignInPage = () => {\r\n  return (\r\n    <div className=\"\">\r\n      <LoginForm />\r\n      <GoogleAndFacebookButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const ToastError = (message) => {\r\n  toast.error(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_ref","label","onClick","disabled","_jsx","className","concat","css","children","GoogleAndFacebookButton","navigate","useNavigate","redirect","setRedirect","useState","googleLogin","useGoogleLogin","onSuccess","tokenResponse","console","log","onError","error","_jsxs","FcGoogle","FacebookLogin","appId","autoLoad","fields","callback","response","onFailure","icon","FaFacebook","textButton","cssClass","schema","yup","shape","email","matches","required","password","min","LoginForm","_errors$email2","_errors$password2","_formData$email2","_formData$password2","_errors$email3","_errors$email4","_errors$password3","_errors$password4","dispatch","useDispatch","formData","setFormData","showPassword","setShowPassword","errors","setErrors","validForm","setValidForm","useEffect","_formData$password","_errors$email","_errors$password","find","el","_formData$email","includes","length","handleInputChange","e","name","value","target","handleBlur","async","validateAt","field","prevErrors","validationError","message","getBorderColor","_Fragment","ToastContainer","onSubmit","preventDefault","validate","abortEarly","then","loginThunk","unwrap","Toastify","ToastError","catch","validationErrors","errorsMap","inner","forEach","path","inputContainer","errorText","inputForm","active","type","placeholder","onChange","onBlur","style","borderColor","color","src","alt","img_error","passwordInputContainer","passwordInput","eyeIcon","handleTogglePassword","FaEyeSlash","FaEye","Link","to","link_forgot","textForgot","btn_text","btn_valid","Button","SignInPage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}