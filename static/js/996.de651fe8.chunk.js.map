{"version":3,"file":"static/js/996.de651fe8.chunk.js","mappings":"+GACA,QAA2B,wBAA3B,EAA2D,qB,aCEpD,MAAMA,EAAQC,IAAsC,IAArC,SAAEC,EAAQ,kBAAEC,GAAmBF,EAQnD,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,QARHC,IAC3B,MAAM,OAAEC,EAAM,cAAEC,GAAkBF,EAC9BC,IAAWC,GACbP,GACF,EAI2DD,UACzDE,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAM,OAAKL,EAAS,kBAAiBJ,UAC3CE,EAAAA,EAAAA,KAAA,OAAAF,SAAMA,OAEJ,C,kICPV,MAgDA,EAhD8BU,KAC5B,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAEjCd,EAAoBA,KACxBa,GAAYE,IAAUA,GAAK,EAW7B,OACEC,EAAAA,EAAAA,MAAA,OAAAjB,SAAA,EACEE,EAAAA,EAAAA,KAACgB,EAAAA,QAAW,KACZD,EAAAA,EAAAA,MAAA,MAAAjB,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAASd,QAASJ,EAAkBD,SAAC,eAIpDE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACC,GAAG,iBAAgBrB,UAC1BE,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAAQnB,SAAC,2BAK3Ba,IACCI,EAAAA,EAAAA,MAACnB,EAAAA,EAAK,CAACG,kBAAmBA,EAAmBqB,UAAU,EAAKtB,SAAA,EAC1DE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,wCACHE,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAASd,QA3BTkB,KACnB,IACEZ,GAASa,EAAAA,EAAAA,MACX,CAAE,MAAOC,IACPC,EAAAA,EAAAA,GAAW,mBACb,GAsBkD1B,SAAC,SAG7CE,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAASd,QAASJ,EAAkBD,SAAC,YAKlD,C,0FClDV,MAyCA,EAzCoBkB,KAClB,MAAMS,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAef,EAAAA,EAAAA,WAAS,KAAO,IAADgB,EAC7C,OAAuC,QAAvCA,EAAOC,aAAaC,QAAQ,mBAAW,IAAAF,EAAAA,EAAI,EAAE,IAa/C,OACE7B,EAAAA,EAAAA,KAAA,OAAAF,UACEiB,EAAAA,EAAAA,MAAA,OAAAjB,SAAA,EACEE,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAASd,QAbA6B,KAO1BP,EANiB,UAAbE,EAMK,0BALE,QAKwB,EAMoB7B,SAAC,UAIpDE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aACJiB,EAAAA,EAAAA,MAAA,MAAAjB,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACC,GAAG,yBAAwBrB,SAAC,gBAGvCE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACC,GAAG,sBAAqBrB,SAAC,aAEpCE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACC,GAAG,6BAA4BrB,SAAC,2BAI3C,C,gDCtCH,MAAM0B,EAAcS,IACzBC,EAAAA,GAAMX,MAAM,GAADhB,OAAI0B,GAAW,CACxBE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SACP,C","sources":["webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","pages/SettingAdverticerPage/SettingAdverticerPage.jsx","pages/SettingPage/SettingPage.jsx","services/ToastError/ToastError.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__2bCFe\",\"modal\":\"Modal_modal__RKlRu\",\"svg\":\"Modal_svg__dYdNt\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({ children, handleToggleModal }) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport SettingPage from \"../SettingPage/SettingPage\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logoutAction } from \"../../redux/auth/authSlice.js\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError.js\";\r\n\r\n\r\nconst SettingAdverticerPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isModal, setIsModal] = useState(false);\r\n\r\n  const handleToggleModal = () => {\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    try {\r\n      dispatch(logoutAction());\r\n    } catch (error) {\r\n      ToastError(\"Error! Try later\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SettingPage />\r\n      <ul>\r\n        <li>\r\n          <button type=\"button\" onClick={handleToggleModal}>\r\n            Log out\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"changePassword\">\r\n            <button type=\"button\">Change password</button>\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n\r\n      {isModal && (\r\n        <Modal handleToggleModal={handleToggleModal} feedback={true}>\r\n          <p>Are you sure you want to Sign Out?</p>\r\n          <button type=\"button\" onClick={handleLogOut}>\r\n            Yes\r\n          </button>\r\n          <button type=\"button\" onClick={handleToggleModal}>\r\n            No\r\n          </button>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingAdverticerPage;\r\n","import { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\n\r\nconst SettingPage = () => {\r\n  const navigate = useNavigate();\r\n  const [pathname, setPathname] = useState(() => {\r\n    return localStorage.getItem(\"pathname\") ?? \"\";\r\n  });\r\n\r\n  const handleSettingButton = () => {\r\n    if (pathname === \"/main\") {\r\n      navigate(\"/main\");\r\n\r\n      return;\r\n    }\r\n\r\n    navigate(\"/main/accountAdverticer\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button type=\"button\" onClick={handleSettingButton}>\r\n          BACK\r\n        </button>\r\n\r\n        <h2>Setting</h2>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/main/setting/language\">Language</NavLink>\r\n          </li>\r\n\r\n          <li>\r\n            <NavLink to=\"/main/setting/theme\">Theme</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/main/setting/aboutService\">About service</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingPage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const ToastError = (message) => {\r\n  toast.error(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["Modal","_ref","children","handleToggleModal","_jsx","className","css","onClick","e","target","currentTarget","concat","SettingAdverticerPage","dispatch","useDispatch","isModal","setIsModal","useState","prev","_jsxs","SettingPage","type","NavLink","to","feedback","handleLogOut","logoutAction","error","ToastError","navigate","useNavigate","pathname","setPathname","_localStorage$getItem","localStorage","getItem","handleSettingButton","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}