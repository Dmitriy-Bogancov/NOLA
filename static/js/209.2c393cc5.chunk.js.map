{"version":3,"file":"static/js/209.2c393cc5.chunk.js","mappings":"4GACA,QAA2B,wBAA3B,EAA2D,qBAA3D,EAA2F,wBAA3F,EAAiI,2BAAjI,EAA0K,2BAA1K,EAAiN,yBAAjN,EAAuP,0B,aCEhP,MAAMA,EAAQC,IAUd,IAVe,QACpBC,EAAO,OACPC,EAAM,MACNC,EAAK,YACLC,EAAW,kBACXC,EAAiB,iBACjBC,EAAmB,UAAS,gBAC5BC,EAAkB,SAAQ,WAC1BC,GAAa,EAAK,SAClBC,GACDT,EAQC,OACEU,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,QARHC,IAC3B,MAAM,OAAEC,EAAM,cAAEC,GAAkBF,EAC9BC,IAAWC,GACbX,GACF,EAI2DI,UACzDC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAM,OAAKL,EAAS,kBAAiBH,UAC3CC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaH,SAC1BD,EACCC,GAEAS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAV,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBH,SAAEN,KACjCO,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBH,SAAEL,KAEhCM,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAAST,UAAWC,EAAeC,QAASZ,EAAQQ,SAC9DH,KAEHI,EAAAA,EAAAA,KAAA,KACEU,KAAK,SACLT,UAAS,GAAAM,OAAKL,EAAc,oBAC5BC,QAASX,EAAOO,SAEfF,YAMP,C,0FC1CV,MA4BA,EA5B2Bc,KACzB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAEjCnB,EAAoBA,KACxBkB,GAAYE,IAAUA,GAAK,EAG7B,OACEP,EAAAA,EAAAA,MAAA,OAAAT,SAAA,CAAK,sBAEHC,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAASP,QAASR,EAAkBI,SAAC,aAGlDS,EAAAA,EAAAA,MAACQ,EAAAA,GAAO,CAACC,GAAG,0BAAyBlB,SAAA,EACnCC,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAAQX,SAAC,WAAgB,OAEvCa,IACCZ,EAAAA,EAAAA,KAACX,EAAAA,EAAK,CACJM,kBAAmBA,EACnBuB,aAAc,0BAA0BnB,UAExCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oCAGH,C","sources":["webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","pages/ChangePasswordPage/ChangePasswordPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__2bCFe\",\"modal\":\"Modal_modal__RKlRu\",\"children\":\"Modal_children__HRgbz\",\"modal_title\":\"Modal_modal_title__G832Y\",\"modal_descr\":\"Modal_modal_descr__c95fw\",\"modal_btn\":\"Modal_modal_btn__IQX72\",\"modal_text\":\"Modal_modal_text__UI4b5\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({\r\n  confirm,\r\n  cancel,\r\n  title,\r\n  description,\r\n  handleToggleModal,\r\n  btn_text_confirm = \"Confirm\",\r\n  btn_text_cancel = \"Cancel\",\r\n  childrenEl = false,\r\n  children,\r\n}) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div className={css.children}>\r\n          {childrenEl ? (\r\n            children\r\n          ) : (\r\n            <>\r\n              <h2 className={css.modal_title}>{title}</h2>\r\n              <p className={css.modal_descr}>{description}</p>\r\n\r\n              <button type=\"button\" className={css.modal_btn} onClick={confirm}>\r\n                {btn_text_confirm}\r\n              </button>\r\n              <p\r\n                type=\"button\"\r\n                className={`${css.modal_text} dark:text-white`}\r\n                onClick={cancel}\r\n              >\r\n                {btn_text_cancel}\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  childrenEl: PropTypes.bool,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  confirm: PropTypes.func,\r\n  cancel: PropTypes.func,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  btn_text_confirm: PropTypes.string,\r\n  btn_text_cancel: PropTypes.string,\r\n};\r\n","import { useState } from \"react\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ChangePasswordPage = () => {\r\n  const [isModal, setIsModal] = useState(false);\r\n\r\n  const handleToggleModal = () => {\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      ChangePasswordPage\r\n      <button type=\"button\" onClick={handleToggleModal}>\r\n        Confirm\r\n      </button>\r\n      <NavLink to=\"/main/settingAdverticer\">\r\n        <button type=\"button\">Cancel</button>{\" \"}\r\n      </NavLink>\r\n      {isModal && (\r\n        <Modal\r\n          handleToggleModal={handleToggleModal}\r\n          navigatePage={\"/main/settingAdverticer\"}\r\n        >\r\n          <p>Sucsessfull change password</p>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordPage;\r\n"],"names":["Modal","_ref","confirm","cancel","title","description","handleToggleModal","btn_text_confirm","btn_text_cancel","childrenEl","children","_jsx","className","css","onClick","e","target","currentTarget","concat","_jsxs","_Fragment","type","ChangePasswordPage","isModal","setIsModal","useState","prev","NavLink","to","navigatePage"],"sourceRoot":""}