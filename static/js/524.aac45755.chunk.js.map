{"version":3,"file":"static/js/524.aac45755.chunk.js","mappings":"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","sources":["webpack://nola/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://nola/./src/components/GoBackButton/GoBackButton.module.css?1091","components/GoBackButton/GoBackButton.jsx","webpack://nola/./src/pages/AddLinksPage/AddLinksPage.module.css?abd1","pages/AddLinksPage/AddLinksPage.jsx","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"Button_buttonForm__X-24B\",\"disabled\":\"Button_disabled__jvels\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ label, onClick, disabled }) => {\r\n  return (\r\n    <button className={`${css.buttonForm} ${disabled ? css.disabled : \"\"}`} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"GoBackButton_goBack__sMPM4\",\"titleRecovery\":\"GoBackButton_titleRecovery__jxfe9\"};","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport css from \"./GoBackButton.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GoBackButton = ({\r\n  to,\r\n  title,\r\n  imgSrc,\r\n  imgAlt,\r\n  imgWidth,\r\n  imgHeight,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <div className={css.goBack}>\r\n      <Link to={to} onClick={onClick}>\r\n        <img src={imgSrc} alt={imgAlt} width={imgWidth} height={imgHeight} />\r\n      </Link>\r\n      <h3 className={css.titleRecovery}>{title}</h3>\r\n    </div>\r\n  );\r\n};\r\nGoBackButton.propTypes = {\r\n  to: PropTypes.string,\r\n  title: PropTypes.string,\r\n  imgSrc: PropTypes.string.isRequired,\r\n  imgAlt: PropTypes.string.isRequired,\r\n  imgWidth: PropTypes.string,\r\n  imgHeight: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default GoBackButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"back_container\":\"AddLinksPage_back_container__tgZHc\",\"empty_block\":\"AddLinksPage_empty_block__Q3OOg\",\"title\":\"AddLinksPage_title__yZ7nw\",\"form_container\":\"AddLinksPage_form_container__Ku-Ah\",\"form\":\"AddLinksPage_form__CRQDp\",\"input\":\"AddLinksPage_input__Pm3oS\",\"btn_container\":\"AddLinksPage_btn_container__xYr9d\"};","import css from \"./AddLinksPage.module.css\";\r\nimport GoBackButton from \"../../components/GoBackButton/GoBackButton\";\r\nimport back from \"../../assets/images/back.jpg\";\r\nimport Button from \"../../components/Button\";\r\nimport { postLinksApi } from \"../../services/https/https\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useCustomContext } from \"../../services/Context/Context\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { preview } from \"@cloudinary/url-gen/actions/videoEdit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst AddLinksPage = () => {\r\n  const location = useLocation();\r\n  const { token, setToken } = useCustomContext();\r\n  const [link, setlink] = useState({\r\n    id: nanoid(),\r\n    url: \"\",\r\n    nameLink: \"\",\r\n  });\r\n\r\n  const [formData, setFormData] = useState(() => {\r\n    return (\r\n      // JSON.parse(localStorage.getItem(\"account\")) ?? {\r\n      //   ...formData,\r\n      // }\r\n      JSON.parse(localStorage.getItem(\"accountLink\")) ?? {\r\n        links: [],\r\n      }\r\n    );\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setlink((prev) => ({\r\n      ...prev,\r\n      id: nanoid(),\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formData.length === 0) {\r\n      setFormData((prev) => ({\r\n        // ...formData,\r\n        links: [link],\r\n      }));\r\n    } else {\r\n      setFormData((prev) => ({\r\n        // ...formData,\r\n        links: [...prev.links, link],\r\n      }));\r\n    }\r\n\r\n    try {\r\n      setlink({\r\n        url: \"\",\r\n        nameLink: \"\",\r\n      });\r\n      // postLinksApi(token, formData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  localStorage.setItem(\"accountLink\", JSON.stringify(formData));\r\n  // localStorage.setItem(\"account\", JSON.stringify(formData));\r\n  return (\r\n    <div>\r\n      <div className={css.back_container}>\r\n        <GoBackButton\r\n          to=\"/main/accountAdverticer/adverticerEdit/links\"\r\n          imgSrc={back}\r\n          imgAlt=\"Go back\"\r\n          imgWidth=\"50px\"\r\n          imgHeight=\"50px\"\r\n        />\r\n        <h2 className={css.title}>Links</h2>\r\n        <p className={css.empty_block}></p>\r\n      </div>\r\n\r\n      <form className={css.form_container} onSubmit={handleSubmit}>\r\n        <div className={css.form}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nameLink\"\r\n            placeholder=\"URL-address\"\r\n            value={link?.nameLink}\r\n            className={`primary_text_style ${css.input} dark:bg-black dark:border-white dark:text-white`}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"url\"\r\n            placeholder=\"Name link\"\r\n            value={link?.url}\r\n            className={`primary_text_style ${css.input} dark:bg-black dark:border-white dark:text-white`}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={css.btn_container}>\r\n          <Button\r\n            label=\"Save\"\r\n            type=\"submit\"\r\n            disabled={\r\n              link?.url?.length > 0 && link?.nameLink?.length > 0 ? false : true\r\n            }\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLinksPage;\r\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n"],"names":["_ref","label","onClick","disabled","_jsx","className","concat","css","children","to","title","imgSrc","imgAlt","imgWidth","imgHeight","_jsxs","Link","src","alt","width","height","AddLinksPage","_link$url","_link$nameLink","useLocation","token","setToken","useCustomContext","link","setlink","useState","id","nanoid","url","nameLink","formData","setFormData","_JSON$parse","JSON","parse","localStorage","getItem","links","handleChange","e","name","value","target","prev","setItem","stringify","GoBackButton","back","onSubmit","async","preventDefault","length","error","console","log","type","placeholder","onChange","Button","size","arguments","undefined","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}