{"version":3,"file":"static/js/728.7173fd20.chunk.js","mappings":"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","sources":["assets/icons/circle-exclamation-mark.svg","webpack://nola/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://nola/./src/components/GoogleButton/GoogleAndFacebookButton.module.css?e16a","components/GoogleButton/GoogleAndFacebookButton.jsx","webpack://nola/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx","services/ToastError/ToastError.js","services/Toastify/Toastify.js"],"sourcesContent":["var _path, _circle, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCircleExclamationMark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 10.0067V10\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8.00008,\n    cy: 8.00008,\n    r: 4.83333,\n    stroke: \"#DA2E2E\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 6V8.33333\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCircleExclamationMark);\nexport default __webpack_public_path__ + \"static/media/circle-exclamation-mark.17ba79873a47e9a43cf4f3584ca4f5b5.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"Button_buttonForm__X-24B\",\"disabled\":\"Button_disabled__jvels\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ label, onClick, disabled }) => {\r\n  return (\r\n    <button className={`${css.buttonForm} ${disabled ? css.disabled : \"\"}`} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"GoogleAndFacebookButton_buttonContainer__XOS+G\",\"buttonForm\":\"GoogleAndFacebookButton_buttonForm__fboKs\",\"separatorLine\":\"GoogleAndFacebookButton_separatorLine__CUteA\",\"orText\":\"GoogleAndFacebookButton_orText__7CdpK\",\"icon\":\"GoogleAndFacebookButton_icon__KaLHd\"};","import React, { useState } from \"react\";\r\nimport { FaFacebook } from \"react-icons/fa\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport css from \"./GoogleAndFacebookButton.module.css\";\r\nimport {  useGoogleLogin } from \"@react-oauth/google\";\r\n\r\nconst GoogleAndFacebookButton = () => {\r\n  const navigate = useNavigate();\r\n  const [redirect, setRedirect] = useState(false); \r\n\r\n  const googleLogin = useGoogleLogin({\r\n    onSuccess: (tokenResponse) => {\r\n      console.log(\"Google login successful\", tokenResponse);\r\n      setRedirect(true); \r\n      navigate(\"/main/accountAdverticer\");\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Google login failed\", error);\r\n    },\r\n  });\r\n\r\n  const handleFacebookSuccess = (response) => {\r\n    console.log(\"Facebook login successful\", response);\r\n    setRedirect(true); \r\n    navigate(\"/main/accountAdverticer\");\r\n  };\r\n\r\n  const handleFacebookFailure = (error) => {\r\n    console.error(\"Facebook login failed\", error);\r\n  };\r\n\r\n  return (\r\n      <div className={css.buttonContainer}>\r\n        <div className={css.separatorLine}></div>\r\n        <div className={`${css.orText} dark:bg-black`}>or</div>\r\n        <button onClick={() => googleLogin()} className={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}>\r\n          <FcGoogle className={css.icon} />\r\n          Continue with Google\r\n        </button>\r\n        <FacebookLogin\r\n          appId=\"366622046395430\"\r\n          autoLoad={false}\r\n          fields=\"name,email,picture\"\r\n          callback={handleFacebookSuccess}\r\n          onFailure={handleFacebookFailure}\r\n          icon={<FaFacebook className={css.icon}/>} \r\n          textButton=\"Continue with Facebook\"\r\n          cssClass={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}\r\n        />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAndFacebookButton;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { FaFacebook } from \"react-icons/fa\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import {jwtDecode} from \"jwt-decode\";\r\n// import css from \"./GoogleAndFacebookButton.module.css\";\r\n// import { FcGoogle } from \"react-icons/fc\";\r\n\r\n// const GoogleAndFacebookButton = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated) {\r\n//       navigate(\"/main/accountAdverticer\");\r\n//     }\r\n//   }, [isAuthenticated, navigate]);\r\n\r\n//   const handleGoogleSuccess = (credentialResponse) => {\r\n//     try {\r\n//       const token = jwtDecode(credentialResponse.credential);\r\n//       console.log(\"Google login successful\", token);\r\n//       setIsAuthenticated(true);\r\n//     } catch (error) {\r\n//       console.error(\"Failed to decode Google token\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleFailure = (error) => {\r\n//     console.error(\"Google login failed\", error);\r\n//   };\r\n\r\n//   const handleFacebookSuccess = (response) => {\r\n//     try {\r\n//       console.log(\"Facebook login successful\", response);\r\n//       setIsAuthenticated(true);\r\n//     } catch (error) {\r\n//       console.error(\"Failed to process Facebook response\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFacebookFailure = (error) => {\r\n//     console.error(\"Facebook login failed\", error);\r\n//   };\r\n\r\n\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId=\"816846792743-3cmg8t2bhfvr19bvu60r65slnrjon8ko.apps.googleusercontent.com\">\r\n//     <div className={css.buttonContainer}>\r\n//       <div className={css.separatorLine}></div>\r\n//       <div className={css.orText}>or</div>\r\n//       <GoogleLogin\r\n//   onSuccess={handleGoogleSuccess}\r\n//   onError={handleGoogleFailure}\r\n// >\r\n//   {({ onClick, disabled }) => (\r\n//     <button className={css.buttonForm} onClick={onClick} disabled={disabled}>\r\n//       <FcGoogle className={css.icon} />\r\n//       Continue with Google\r\n//     </button>\r\n//   )}\r\n// </GoogleLogin>\r\n//       <FacebookLogin\r\n//         appId=\"366622046395430\"\r\n//         autoLoad={false}\r\n//         fields=\"name,email,picture\"\r\n//         callback={handleFacebookSuccess}\r\n//         onFailure={handleFacebookFailure}\r\n//         render={renderProps => (\r\n//           <button onClick={renderProps.onClick} className={css.buttonForm}>\r\n//             <FaFacebook className={css.icon} /> Continue with Facebook\r\n//           </button>\r\n//         )}\r\n//       />\r\n//     </div>\r\n//   </GoogleOAuthProvider>\r\n//   );\r\n// };\r\n\r\n// export default GoogleAndFacebookButton;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"RegistrationForm_inputForm__0Pd3p\",\"active\":\"RegistrationForm_active__dqk7s\",\"textInfo\":\"RegistrationForm_textInfo__qppjF\",\"spanPolicy\":\"RegistrationForm_spanPolicy__WZvgi\",\"inputContainer\":\"RegistrationForm_inputContainer__Xna0O\",\"passwordInputContainer\":\"RegistrationForm_passwordInputContainer__Nbmix\",\"img_error\":\"RegistrationForm_img_error__m0hRd\",\"eyeIcon\":\"RegistrationForm_eyeIcon__csh0a\",\"error\":\"RegistrationForm_error__2sOV-\",\"errorText\":\"RegistrationForm_errorText__2xzzs\",\"btn_text\":\"RegistrationForm_btn_text__CE04u\",\"btn_valid\":\"RegistrationForm_btn_valid__lRJ-N\"};","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport css from \"./RegistrationForm.module.css\";\r\nimport Button from \"../Button\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport * as yup from \"yup\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerThunk } from \"../../redux/auth/authThunk\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport error from \"../../assets/icons/circle-exclamation-mark.svg\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .matches(/^[^\\s]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^а-яА-ЯіІїЇєЄ]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Please enter a valid email address\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .matches(RegExp('[!@#$%^&*(),.?\":{}|<>]'), \"Special symbols is required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Confirm Password is required\")\r\n    .min(8, \"Confirm Password must be at least 8 characters\")\r\n        .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n    entityName: yup\r\n        .string()\r\n        .required(\"Name is required\"),\r\n});\r\n\r\nconst RegistrationForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    entityName:\"\"\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [validForm, setValidForm] = useState(false);\r\n\r\n  useEffect(() => {}, [errors]);\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const validEmail = [\".com\", \".net\", \".ua\"];\r\n\r\n    if (\r\n      validEmail.find((el) => formData?.email?.includes(el)) &&\r\n      formData?.password?.length > 7 &&\r\n      formData?.confirmPassword?.length > 7 &&\r\n      errors?.email?.length === 0 &&\r\n      errors?.password?.length === 0 &&\r\n      errors?.confirmPassword?.length === 0\r\n    ) {\r\n      setValidForm(true);\r\n      return;\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [\r\n    errors?.confirmPassword?.length,\r\n    errors?.email?.length,\r\n    errors?.password?.length,\r\n    formData?.confirmPassword?.length,\r\n    formData?.email,\r\n    formData?.password?.length,\r\n  ]);\r\n\r\n  const handleTogglePassword = (field) => {\r\n    if (field === \"password\") {\r\n      setShowPassword(!showPassword);\r\n    } else if (field === \"confirmPassword\") {\r\n      setShowConfirmPassword(!showConfirmPassword);\r\n    }\r\n  };\r\n\r\n  const handleBlur = async (field) => {\r\n    try {\r\n      await schema.validateAt(field, formData);\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: \"\",\r\n      }));\r\n    } catch (validationError) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: validationError.message,\r\n      }));\r\n      setValidForm(false);\r\n    }\r\n  };\r\n\r\n  const getBorderColor = (field) => {\r\n    return errors[field] && \"#da2e2e\";\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(async () => {\r\n        console.log(\"Form submitted with data:\", formData);\r\n\r\n        try {\r\n          await dispatch(registerThunk(formData)).unwrap();\r\n          Toastify(\"Registration sucsessfull\");\r\n          navigate(\"/main/accountAdverticer/adverticerEdit\");\r\n        } catch (error) {\r\n          ToastError(error);\r\n        }\r\n        setFormData({\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        });\r\n        setErrors({});\r\n        setValidForm(false);\r\n      })\r\n      .catch((validationErrors) => {\r\n        const errorsMap = {};\r\n        validationErrors.inner.forEach((error) => {\r\n          errorsMap[error.path] = error.message;\r\n        });\r\n        setErrors(errorsMap);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={css.inputContainer}>\r\n          {errors.email && <div className={css.errorText}>{errors.email}</div>}\r\n          <input\r\n            className={`${css.inputForm}  ${\r\n              errors?.email?.length === 0 ? css.active : \"\"\r\n            } dark:bg-black dark:border-white dark:text-white`}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            onBlur={() => handleBlur(\"email\")}\r\n            style={{\r\n              borderColor: getBorderColor(\"email\"),\r\n              color: getBorderColor(\"email\"),\r\n            }}\r\n          />\r\n\r\n          {errors?.email?.length > 1 ? (\r\n            <img src={error} alt=\"\" className={css.img_error} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.password && (\r\n            <div className={css.errorText}>{errors.password}</div>\r\n          )}\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}  ${\r\n                errors?.password?.length === 0 ? css.active : \"\"\r\n              } dark:bg-black dark:border-white dark:text-white`}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"password\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"password\"),\r\n                color: getBorderColor(\"password\"),\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className={`${css.eyeIcon} ${\r\n                errors?.password?.length > 1 ? css.error : \"\"\r\n              }`}\r\n              onClick={() => handleTogglePassword(\"password\")}\r\n            >\r\n              {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.confirmPassword && (\r\n            <div className={css.errorText}>{errors.confirmPassword}</div>\r\n          )}\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}  ${\r\n                errors?.confirmPassword?.length === 0 ? css.active : \"\"\r\n              } dark:bg-black dark:border-white dark:text-white`}\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"confirmPassword\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"confirmPassword\"),\r\n                color: getBorderColor(\"confirmPassword\"),\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className={`${css.eyeIcon} ${\r\n                errors?.confirmPassword?.length > 1 ? css.error : \"\"\r\n              }`}\r\n              onClick={() => handleTogglePassword(\"confirmPassword\")}\r\n            >\r\n              {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n              </div>\r\n\r\n              <div className={css.inputContainer}>\r\n                  {errors.entityName && <div className={css.errorText}>{errors.entityName}</div>}\r\n                  <input\r\n                      className={`${css.inputForm}  ${errors?.entityName?.length === 0 ? css.active : \"\"\r\n                          } dark:bg-black dark:border-white dark:text-white`}\r\n                      type=\"text\"\r\n                      name=\"entityName\"\r\n                      placeholder=\"Name\"\r\n                      value={formData.entityName}\r\n                      onChange={handleInputChange}\r\n                      onBlur={() => handleBlur(\"email\")}\r\n                      style={{\r\n                          borderColor: getBorderColor(\"email\"),\r\n                          color: getBorderColor(\"email\"),\r\n                      }}\r\n                  />\r\n\r\n                  {errors?.entityName?.length > 1 ? (\r\n                      <img src={error} alt=\"\" className={css.img_error} />\r\n                  ) : (\r\n                      \"\"\r\n                  )}\r\n              </div>\r\n\r\n        <p className={css.textInfo}>\r\n          *By clicking the Register button, I agree to the\r\n          <NavLink to=\"/main/setting/policyAndPrivecy\">\r\n            <span className={css.spanPolicy}>Privacy Policy</span>\r\n          </NavLink>\r\n          and give my consent to data processing\r\n        </p>\r\n        <div className={`${css.btn_text} ${validForm ? css.btn_valid : \"\"}`}>\r\n          <Button\r\n            label=\"Register\"\r\n            type=\"submit\"\r\n            disabled={validForm ? false : true}\r\n          />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import RegistrationForm from \"../../components/RegistrationForm\";\r\nimport GoogleAndFacebookButton from \"../../components/GoogleButton/GoogleAndFacebookButton\";\r\n\r\nconst RegistrationPage = () => {\r\n  return (\r\n    <div className=\"\">\r\n      <RegistrationForm />\r\n      <GoogleAndFacebookButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const ToastError = (message) => {\r\n  toast.error(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_ref","label","onClick","disabled","_jsx","className","concat","css","children","GoogleAndFacebookButton","navigate","useNavigate","redirect","setRedirect","useState","googleLogin","useGoogleLogin","onSuccess","tokenResponse","console","log","onError","error","_jsxs","FcGoogle","FacebookLogin","appId","autoLoad","fields","callback","response","onFailure","icon","FaFacebook","textButton","cssClass","schema","yup","shape","email","matches","required","password","RegExp","min","confirmPassword","oneOf","entityName","RegistrationForm","_errors$confirmPasswo2","_errors$email2","_errors$password2","_formData$confirmPass2","_formData$password2","_errors$email3","_errors$email4","_errors$password3","_errors$password4","_errors$confirmPasswo3","_errors$confirmPasswo4","_errors$entityName","_errors$entityName2","dispatch","useDispatch","formData","setFormData","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","errors","setErrors","validForm","setValidForm","useEffect","handleInputChange","e","name","value","target","_formData$password","_formData$confirmPass","_errors$email","_errors$password","_errors$confirmPasswo","find","el","_formData$email","includes","length","handleTogglePassword","field","handleBlur","async","validateAt","prevErrors","validationError","message","getBorderColor","_Fragment","ToastContainer","onSubmit","preventDefault","validate","abortEarly","then","registerThunk","unwrap","Toastify","ToastError","catch","validationErrors","errorsMap","inner","forEach","path","inputContainer","errorText","inputForm","active","type","placeholder","onChange","onBlur","style","borderColor","color","src","alt","img_error","passwordInputContainer","passwordInput","eyeIcon","FaEyeSlash","FaEye","textInfo","NavLink","to","spanPolicy","btn_text","btn_valid","Button","RegistrationPage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}