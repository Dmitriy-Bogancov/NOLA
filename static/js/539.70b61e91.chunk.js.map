{"version":3,"file":"static/js/539.70b61e91.chunk.js","mappings":"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","sources":["webpack://nola/./src/components/GoBackButton/GoBackButton.module.css?1091","assets/icons/arrow_left.svg","components/GoBackButton/GoBackButton.jsx","webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://nola/./src/components/PostsAdverticerMenu/PostsAdverticerMenu.module.css?71d6","components/PostsAdverticerMenu/PostsAdverticerMenu.jsx","webpack://nola/./src/components/PostsAdverticer/PostsAdverticer.module.css?8299","components/PostsAdverticer/PostsAdverticer.jsx","webpack://nola/./src/pages/AdverticeArchivePage/AdverticeArchivePage.module.css?507f","pages/AdverticeArchivePage/AdverticeArchivePage.jsx","services/ToastError/ToastError.js","services/Toastify/Toastify.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"GoBackButton_goBack__sMPM4\",\"titleRecovery\":\"GoBackButton_titleRecovery__jxfe9\",\"iconDark\":\"GoBackButton_iconDark__ngklm\"};","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.3333 28H39.6666\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.6666 18.6667L16.3333 28.0001L25.6666 37.3334\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow_left.79cbc6f596f7d227f8c314b9a6ec80fb.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport css from \"./GoBackButton.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useCustomContext } from \"../../services/Context/Context\";\r\nimport { ReactComponent as Icon_Back } from \"../../assets/icons/arrow_left.svg\";\r\n\r\nconst GoBackButton = ({\r\n  to,\r\n  title,\r\n  imgSrc,\r\n  imgAlt,\r\n  imgWidth,\r\n  imgHeight,\r\n  onClick,\r\n}) => {\r\n  const { theme, setTheme } = useCustomContext();\r\n  return (\r\n    <div className={css.goBack}>\r\n      <Link\r\n        to={to}\r\n        onClick={onClick}\r\n        className={theme === \"dark\" ? css.iconDark : \"\"}\r\n      >\r\n        <Icon_Back />\r\n      </Link>\r\n      <h3 className={`${css.titleRecovery} dark:text-white`}>{title}</h3>\r\n    </div>\r\n  );\r\n};\r\nGoBackButton.propTypes = {\r\n  to: PropTypes.string,\r\n  title: PropTypes.string,\r\n  imgSrc: PropTypes.string,\r\n  imgAlt: PropTypes.string.isRequired,\r\n  imgWidth: PropTypes.string,\r\n  imgHeight: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default GoBackButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__2bCFe\",\"modal\":\"Modal_modal__RKlRu\",\"children\":\"Modal_children__HRgbz\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({ children, handleToggleModal }) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div className={css.children}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"post_menu\":\"PostsAdverticerMenu_post_menu__om+8g\",\"container_menu\":\"PostsAdverticerMenu_container_menu__q8Ojw\",\"select\":\"PostsAdverticerMenu_select__tUmP+\",\"active\":\"PostsAdverticerMenu_active__eZGBV\"};","import PropTypes from \"prop-types\";\r\nimport css from \"./PostsAdverticerMenu.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nexport const PostsAdverticerMenu = ({\r\n  setShowMenuActive = true,\r\n  getPost,\r\n  id,\r\n  isPostStopped,\r\n  postMenuActive,\r\n  handlePostArchivationMessage,\r\n  handlePostStoppingMessage,\r\n  handlePostLaunchAgainMessage,\r\n  handleRecoverePostMessage,\r\n  handleDeletePostMessage,\r\n  menuActive,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={css.post_menu}>\r\n        <p>213</p>\r\n        <p>7</p>\r\n\r\n        <div\r\n          className={menuActive ? css.container_menu : \"\"}\r\n          onClick={() => postMenuActive(id)}\r\n        >\r\n          ***\r\n          {setShowMenuActive && (\r\n            <div className={`${css.select} `}>\r\n              <NavLink to={`/main/addPost/${id}`}>\r\n                <button>Edit</button>\r\n              </NavLink>\r\n              <p>\r\n                <button type=\"button\" onClick={handlePostArchivationMessage}>\r\n                  Archivation\r\n                </button>\r\n              </p>\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  disabled={isPostStopped}\r\n                  onClick={handlePostStoppingMessage}\r\n                >\r\n                  Stopping\r\n                </button>\r\n              </p>\r\n\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  disabled={!isPostStopped}\r\n                  onClick={handlePostLaunchAgainMessage}\r\n                >\r\n                  To launch post again\r\n                </button>\r\n              </p>\r\n            </div>\r\n          )}\r\n          {!setShowMenuActive && (\r\n            <>\r\n              <div className={`${css.select} `}>\r\n                <NavLink to={`/main/addPost/${id}`}>\r\n                  <button>Edit</button>\r\n                </NavLink>\r\n                <p>\r\n                  <button onClick={handleRecoverePostMessage}>\r\n                    Recovere post\r\n                  </button>\r\n                </p>\r\n                <p>\r\n                  <button onClick={handleDeletePostMessage}>Delete</button>\r\n                </p>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPostsAdverticerMenu.propTypes = {\r\n  setShowMenuActive: PropTypes.bool,\r\n  getPost: PropTypes.array,\r\n  id: PropTypes.string,\r\n  postMenuActive: PropTypes.func,\r\n  handlePostArchivationMessage: PropTypes.func,\r\n  handlePostStoppingMessage: PropTypes.func,\r\n  handlePostLaunchAgainMessage: PropTypes.func,\r\n  isPostStopped: PropTypes.bool,\r\n  handleDeletePostMessage: PropTypes.func,\r\n  handleRecoverePostMessage: PropTypes.func,\r\n  menuActive: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"PostsAdverticer_img__IJe8t\",\"logo_container\":\"PostsAdverticer_logo_container__plN2m\",\"logo\":\"PostsAdverticer_logo__bwPbY\",\"logo_description\":\"PostsAdverticer_logo_description__t9XCM\",\"title\":\"PostsAdverticer_title__R1CmQ\",\"descriptionTest\":\"PostsAdverticer_descriptionTest__RJCdn\",\"links\":\"PostsAdverticer_links__z8L7M\",\"links_item\":\"PostsAdverticer_links_item__1YETU\",\"link_img\":\"PostsAdverticer_link_img__Z-5q4\",\"url\":\"PostsAdverticer_url__+Q35s\"};","import PropTypes from \"prop-types\";\r\nimport css from \"./PostsAdverticer.module.css\";\r\n\r\nexport const PostsAdverticer = ({ title, description, links }) => {\r\n  return (\r\n    <>\r\n      <div className={css.logo_container}>\r\n        <img src=\"\" alt=\"\" className={css.logo} />\r\n        <p className={`${css.logo_description} dark:text-white`}>{title}</p>\r\n      </div>\r\n\r\n      <p className={`${css.title} dark:text-white`}>{title}</p>\r\n\r\n      <p className={`${css.descriptionTest} dark:text-white`}>{description}</p>\r\n\r\n      {links?.length > 0 && (\r\n        <p className={`${css.links} dark:text-white`}>Links:</p>\r\n      )}\r\n      <ul>\r\n        {links?.map(({ id, url, name }) =>\r\n          name.length !== 0 ? (\r\n            <li key={id} className={`${css.links_item}`}>\r\n              <img src=\"\" alt=\"\" className={css.link_img} />\r\n              <a href={url} className={`${css.url} dark:text-white`}>\r\n                {\" \"}\r\n                {name}\r\n              </a>\r\n            </li>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nPostsAdverticer.propTypes = {\r\n  links: PropTypes.array,\r\n  description: PropTypes.string,\r\n  title: PropTypes.string,\r\n  data: PropTypes.object,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"top_container\":\"AdverticeArchivePage_top_container__SvP0X\",\"return\":\"AdverticeArchivePage_return__DWwLo\",\"title\":\"AdverticeArchivePage_title__OceL-\",\"card\":\"AdverticeArchivePage_card__USMea\",\"post_container\":\"AdverticeArchivePage_post_container__2qxmF\",\"img\":\"AdverticeArchivePage_img__JPwO5\",\"list\":\"AdverticeArchivePage_list__HqIXZ\"};","import { useEffect, useState } from \"react\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { PostsAdverticer } from \"../../components/PostsAdverticer/PostsAdverticer\";\r\n\r\nimport css from \"./AdverticeArchivePage.module.css\";\r\nimport { PostsAdverticerMenu } from \"../../components/PostsAdverticerMenu/PostsAdverticerMenu\";\r\nimport { deletePostApi, getAllPostApi } from \"../../services/https/https\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport GoBackButton from \"../../components/GoBackButton/GoBackButton\";\r\nimport back from \"../../assets/images/back.jpg\";\r\n\r\nconst AdverticeArchivePage = () => {\r\n  const [post, setPost] = useState([]);\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(false);\r\n  const [isActive, setIsActive] = useState({\r\n    recovere: false,\r\n    deleted: false,\r\n  });\r\n\r\n  const [postActiveId, setPostActiveId] = useState(\"\");\r\n  const [showPost, setShowPost] = useState(false);\r\n  const [menuActive, setMenuActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getData = (async () => {\r\n      try {\r\n        //  await getAllAdverticerPostApi.status || getAccountApi.status\r\n        const { data } = await getAllPostApi();\r\n        setPost(data);\r\n      } catch (error) {\r\n        ToastError(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const handleBack = () => {\r\n    setShowPost(false);\r\n  };\r\n\r\n  const handleToggleModal = (message) => {\r\n    setIsModal((prev) => !prev);\r\n    setIsMessage(message);\r\n  };\r\n\r\n  const handleDeletePostMessage = () => {\r\n    handleToggleModal(\"Are you sure you want to delete?\");\r\n    setIsActive({ recovere: false, deleted: true });\r\n  };\r\n\r\n  const handleRecoverePostMessage = () => {\r\n    handleToggleModal(\"Are you sure you want to recovery?\");\r\n    setIsActive({ recovere: true, deleted: false });\r\n  };\r\n\r\n  const handleDeletePost = async (id) => {\r\n    try {\r\n      await deletePostApi(id);\r\n      Toastify(\"Archived post has been deleted\");\r\n      setPost(post.filter((post) => post.id !== id));\r\n    } catch (error) {\r\n      ToastError(\"Error! Try later\");\r\n    }\r\n\r\n    handleToggleModal();\r\n  };\r\n\r\n  const handleRecoverePost = (id) => {\r\n    setPost(post.filter(() => post.id !== id));\r\n    handleToggleModal();\r\n    Toastify(\"Archived post has been recovered\");\r\n  };\r\n\r\n  const postMenuActive = (id) => {\r\n    setMenuActive((prev) => !prev);\r\n    setPostActiveId(id);\r\n  };\r\n\r\n  const handlePost = (id) => {\r\n    setShowPost(post.filter((item) => item.id === id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <ul className={css.card}>\r\n        {!showPost &&\r\n          post?.map(({ id, title, description, banners }) => (\r\n            <li key={id} className={css.post_container}>\r\n              <img\r\n                src={banners}\r\n                alt=\"\"\r\n                className={css.img}\r\n                onClick={() => handlePost(id)}\r\n              />\r\n              <h2 className={css.title}>{title}</h2>\r\n              <PostsAdverticerMenu\r\n                menuActive={menuActive}\r\n                setShowMenuActive={false}\r\n                postMenuActive={postMenuActive}\r\n                id={id}\r\n                handleRecoverePostMessage={handleRecoverePostMessage}\r\n                handleDeletePostMessage={handleDeletePostMessage}\r\n              />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      {isModal && (\r\n        <Modal handleToggleModal={handleToggleModal}>\r\n          {isActive.recovere && (\r\n            <>\r\n              <p>{isMessage}</p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRecoverePost(postActiveId)}\r\n              >\r\n                Yes\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          {isActive.deleted && (\r\n            <>\r\n              <p>{isMessage}</p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleDeletePost(postActiveId)}\r\n              >\r\n                Yes\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          <button type=\"button\" onClick={handleToggleModal}>\r\n            No\r\n          </button>\r\n        </Modal>\r\n      )}\r\n      <ul className={css.list}>\r\n        {showPost &&\r\n          showPost?.map(({ id, title, description, banners, links }) => (\r\n            <li key={id}>\r\n              <div className={css.top_container}>\r\n                <GoBackButton\r\n                  imgSrc={back}\r\n                  imgAlt=\"Go back\"\r\n                  imgWidth=\"50px\"\r\n                  imgHeight=\"50px\"\r\n                  onClick={handleBack}\r\n                />\r\n\r\n                <p className={css.return}>Return to the feed</p>\r\n              </div>\r\n              <img src={banners} alt=\"\" className={css.img} />\r\n              <PostsAdverticer\r\n                id={id}\r\n                title={title}\r\n                description={description}\r\n                links={links}\r\n                banner={banners}\r\n                setShowPost={setShowPost}\r\n              />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdverticeArchivePage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const ToastError = (message) => {\r\n  toast.error(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_path","_path2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","to","imgSrc","imgAlt","imgWidth","imgHeight","onClick","theme","setTheme","useCustomContext","_jsxs","className","css","children","_jsx","Link","Icon_Back","concat","Modal","handleToggleModal","e","currentTarget","PostsAdverticerMenu","setShowMenuActive","getPost","isPostStopped","postMenuActive","handlePostArchivationMessage","handlePostStoppingMessage","handlePostLaunchAgainMessage","handleRecoverePostMessage","handleDeletePostMessage","menuActive","_Fragment","NavLink","type","disabled","PostsAdverticer","description","links","src","alt","map","_ref2","url","name","href","AdverticeArchivePage","post","setPost","useState","isModal","setIsModal","isMessage","setIsMessage","isActive","setIsActive","recovere","deleted","postActiveId","setPostActiveId","showPost","setShowPost","setMenuActive","useEffect","data","getAllPostApi","error","ToastError","handleBack","message","prev","ToastContainer","banners","filter","item","handlePost","handleRecoverePost","Toastify","async","deletePostApi","handleDeletePost","GoBackButton","back","banner","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}