{"version":3,"file":"static/js/528.69160854.chunk.js","mappings":"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","sources":["webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://nola/./src/pages/SavedPostsPage/SavedPostsPage.module.css?e083","assets/icons/saved_icon.svg","pages/SavedPostsPage/SavedPostsPage.jsx","services/Toastify/Toastify.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__2bCFe\",\"modal\":\"Modal_modal__RKlRu\",\"svg\":\"Modal_svg__dYdNt\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({ children, handleToggleModal }) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"SavedPostsPage_title__F2ODv\",\"list\":\"SavedPostsPage_list__NNuIS\",\"item\":\"SavedPostsPage_item__pAjPL\",\"img\":\"SavedPostsPage_img__FcHGU\",\"item_footer\":\"SavedPostsPage_item_footer__qDBam\",\"logo_icon\":\"SavedPostsPage_logo_icon__o+dOQ\",\"item_description\":\"SavedPostsPage_item_description__7wFVZ\",\"item_btn\":\"SavedPostsPage_item_btn__L8KD-\",\"container\":\"SavedPostsPage_container__S6930\",\"title_empty\":\"SavedPostsPage_title_empty__tc2LC\",\"description\":\"SavedPostsPage_description__fHYxt\"};","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSavedIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 19,\n    viewBox: \"0 0 14 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 0.19043H2C0.9 0.19043 0 1.09043 0 2.19043V18.1904L7 15.1904L14 18.1904V2.19043C14 1.09043 13.1 0.19043 12 0.19043Z\",\n    fill: \"#666666\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSavedIcon);\nexport default __webpack_public_path__ + \"static/media/saved_icon.1ad2907db1b3487ea7b9246bcd25daad.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink } from \"react-router-dom\";\r\nimport css from \"./SavedPostsPage.module.css\";\r\nimport { useState } from \"react\";\r\nimport saved_icon from \"../../assets/icons/saved_icon.svg\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\n\r\nconst LOKAL_KEY = \"savedPost\";\r\n\r\nconst SavedPostsPage = () => {\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [isDeletePost, setDeletePost] = useState(\"\");\r\n  const [posts, setPosts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(LOKAL_KEY));\r\n  });\r\n\r\n  const handleToggleModal = (message) => {\r\n    setDeletePost(message);\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    const savedPost = posts.filter((post) => post.id !== postId);\r\n\r\n    setPosts(savedPost);\r\n\r\n    localStorage.setItem(LOKAL_KEY, JSON.stringify(savedPost));\r\n\r\n    Toastify(\"Post has been deleted\");\r\n    handleToggleModal();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <h1 className={css.title}>My saved</h1>\r\n\r\n      {posts?.length > 0 ? (\r\n        <ul className={css.list}>\r\n          {posts.map((post) => (\r\n            <li key={post.id} className={css.item}>\r\n              <NavLink to={`/main/${post.id}`}>\r\n                <img src={post.banner} alt=\"\" className={css.img} />\r\n              </NavLink>\r\n              <div className={css.item_footer}>\r\n                <div>\r\n                  <img src=\"\" alt=\"\" className={css.logo_icon} />\r\n                </div>\r\n\r\n                <p className={`${css.item_description} dark:text-white`}>\r\n                  {post.title}\r\n                </p>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className={css.item_btn}\r\n                  onClick={\r\n                    () => handleToggleModal(post.id)\r\n                    // onClick={() => handleDeletePost(post.id)\r\n                  }\r\n                >\r\n                  <img src={saved_icon} alt=\"saved_icon\" />\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <div className={css.container}>\r\n          <h2 className={`${css.title_empty} dark:text-white`}>\r\n            This list is empty\r\n          </h2>\r\n          <p className={`${css.description} dark:text-white`}>\r\n            Add something you`ve liked from the main page\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {isModal && (\r\n        <Modal handleToggleModal={handleToggleModal}>\r\n          <>\r\n            \"Are you sure you want to delete?\"\r\n            <button type=\"button\" onClick={handleToggleModal}>\r\n              No\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleDeletePost(isDeletePost)}\r\n            >\r\n              Yes\r\n            </button>\r\n          </>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavedPostsPage;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["Modal","_ref","children","handleToggleModal","_jsx","className","css","onClick","e","target","currentTarget","concat","LOKAL_KEY","SavedPostsPage","isModal","setIsModal","useState","isDeletePost","setDeletePost","posts","setPosts","JSON","parse","localStorage","getItem","message","prev","_jsxs","ToastContainer","length","map","post","NavLink","to","id","src","banner","alt","title","type","saved_icon","_Fragment","postId","savedPost","filter","setItem","stringify","Toastify","handleDeletePost","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}