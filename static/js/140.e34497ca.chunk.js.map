{"version":3,"file":"static/js/140.e34497ca.chunk.js","mappings":"gHAAIA,EAAOC,E,UACX,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,SAASS,EAAaC,EAAMC,GAC1B,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOhB,EAAS,CACtDqB,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAMpB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E8B,EAAG,sBACHC,OAAQ,QACRC,YAAa,IACbC,cAAe,QACfC,eAAgB,WACbjC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChE6B,EAAG,mDACHC,OAAQ,QACRC,YAAa,IACbC,cAAe,QACfC,eAAgB,WAEpB,CACA,MAAMC,EAA0B,aAAiBlB,GAClC,G,yCCEf,MACA,EAAe,IAA0B,2E,0CCpCzC,QAA6B,2BAA7B,EAAmE,yB,aCGnE,MAcA,EAdeC,IAAmC,IAAlC,MAAEkB,EAAK,QAAEC,EAAO,SAAEC,GAAUpB,EAC1C,OACEqB,EAAAA,EAAAA,KAAA,UAAQC,UAAS,GAAAC,OAAKC,EAAc,KAAAD,OAAIH,EAAWI,EAAe,IAAML,QAASA,EAASC,SAAUA,EAASK,SAC1GP,GACM,C,wDCPb,QAAyB,6BAAzB,EAAsE,oCAAtE,EAAqH,+B,iCCOrH,MAiCA,EAjCqBlB,IAQd,IARe,GACpB0B,EAAE,MACFxB,EAAK,OACLyB,EAAM,OACNC,EAAM,SACNC,EAAQ,UACRC,EAAS,QACTX,GACDnB,EACC,MAAM,MAAE+B,EAAK,SAAEC,IAAaC,EAAAA,EAAAA,KAC5B,OACEC,EAAAA,EAAAA,MAAA,OAAKZ,UAAWE,EAAWC,SAAA,EACzBJ,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CACHT,GAAIA,EACJP,QAASA,EACTG,UAAqB,SAAVS,EAAmBP,EAAe,GAAGC,UAEhDJ,EAAAA,EAAAA,KAACe,EAAAA,EAAS,OAEZf,EAAAA,EAAAA,KAAA,MAAIC,UAAS,GAAAC,OAAKC,EAAiB,oBAAmBC,SAAEvB,MACpD,C,kCC3BV,QAA2B,wBAA3B,EAA2D,qBAA3D,EAA2F,wBAA3F,EAAiI,2BAAjI,EAA0K,2BAA1K,EAAiN,yBAAjN,EAAuP,0B,aCEhP,MAAMmC,EAAQrC,IAUd,IAVe,QACpBsC,EAAO,OACPC,EAAM,MACNrC,EAAK,YACLsC,EAAW,kBACXC,EAAiB,iBACjBC,EAAmB,UAAS,gBAC5BC,EAAkB,SAAQ,WAC1BC,GAAa,EAAK,SAClBnB,GACDzB,EAQC,OACEqB,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAcL,QARH0B,IAC3B,MAAM,OAAEzD,EAAM,cAAE0D,GAAkBD,EAC9BzD,IAAW0D,GACbL,GACF,EAI2DhB,UACzDJ,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAS,kBAAiBC,UAC3CJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAaC,SAC1BmB,EACCnB,GAEAS,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAtB,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWE,EAAgBC,SAAEvB,KACjCmB,EAAAA,EAAAA,KAAA,KAAGC,UAAWE,EAAgBC,SAAEe,KAEhCnB,EAAAA,EAAAA,KAAA,UAAQ2B,KAAK,SAAS1B,UAAWE,EAAeL,QAASmB,EAAQb,SAC9DiB,KAEHrB,EAAAA,EAAAA,KAAA,KACE2B,KAAK,SACL1B,UAAS,GAAAC,OAAKC,EAAc,oBAC5BL,QAASoB,EAAOd,SAEfkB,YAMP,C,iFC7CV,QAA4B,gCAA5B,EAAwE,gCAAxE,EAAoH,gCAApH,EAA+J,+BAA/J,EAA8M,oCAA9M,EAA8P,gCAA9P,EAAuS,6BAAvS,EAA+a,qCAA/a,EAAge,gCAAhe,EAA4gB,gCAA5gB,EAA4jB,oC,yGCe5jB,MAAMM,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJG,QAAQ,WAAY,iCACpBA,QAAQ,uEAAsB,iCAC9BA,QAAQ,4CACP,2DAEDC,SAAS,uBAwLd,EArLqBC,KAAO,IAADC,EAAAC,EAAAC,EACzB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,MAAE7B,EAAK,SAAEC,IAAaC,EAAAA,EAAAA,MACrB4B,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,CACvCX,MAAO,MAGFc,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,IAC/BK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAEvCO,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACK,CAAC,OAAQ,OAAQ,OAGvBC,MAAMC,IAAE,IAAAC,EAAA,OAAa,OAARV,QAAQ,IAARA,GAAe,QAAPU,EAARV,EAAUZ,aAAK,IAAAsB,OAAP,EAARA,EAAiBC,SAASF,EAAG,KAC1B,KAApB,OAANP,QAAM,IAANA,GAAa,QAAPK,EAANL,EAAQd,aAAK,IAAAmB,OAAP,EAANA,EAAehF,QAEhBuE,GAAa,GAGbA,GAAa,EACf,GACC,CAACI,EAAc,OAANA,QAAM,IAANA,GAAa,QAAPV,EAANU,EAAQd,aAAK,IAAAI,OAAP,EAANA,EAAejE,OAAgB,OAARyE,QAAQ,IAARA,OAAQ,EAARA,EAAUZ,QAE7C,MAoEMX,EAAoBA,KACxB4B,GAAYO,IAAUA,GAAK,EAOvBC,EAAkBC,GACfZ,EAAOY,IAAU,UAG1B,OACE5C,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAtB,SAAA,EACEJ,EAAAA,EAAAA,KAAC0D,EAAAA,GAAc,KACf7C,EAAAA,EAAAA,MAAA,OAAKZ,UAAWE,EAAcC,SAAA,EAC5BJ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,CACXpD,OAAO,UACPC,SAAS,OACTC,UAAU,OACV5B,MAAM,oBACNwB,GAAG,sBACHP,QAlBW8D,KACjBtB,EAAS,sBAAsB,KAoB3BtC,EAAAA,EAAAA,KAAA,OAAK6D,I,yvLAAYC,IAAI,OAAO7D,UAAWE,KACvCH,EAAAA,EAAAA,KAAA,MAAIC,UAAS,GAAAC,OAAKC,EAAa,oBAAmBC,SAAC,0BAGnDS,EAAAA,EAAAA,MAAA,KAAGZ,UAAS,GAAAC,OAAKC,EAAY,oBAAmBC,SAAA,CAAC,6CACNJ,EAAAA,EAAAA,KAAA,SAAM,oCAIjDa,EAAAA,EAAAA,MAAA,QAAMZ,UAAWE,EAAmB4D,SA1FpBvC,IACpBA,EAAEwC,iBAEFpC,EACGqC,SAAStB,EAAU,CAAEuB,YAAY,IACjCC,MAAKC,UACJ,IACEC,QAAQC,IAAI,4BAA6B3B,IAEzC4B,EAAAA,EAAAA,GAAS,8BACTnD,GACF,CAAE,MAAOoD,GAAQ,IAADC,EAAAC,EACdL,QAAQC,IAAIE,IACZG,EAAAA,EAAAA,IACO,OAALH,QAAK,IAALA,GAAe,QAAVC,EAALD,EAAOI,gBAAQ,IAAAH,OAAV,EAALA,EAAiBI,QACV,OAALL,QAAK,IAALA,GAAe,QAAVE,EAALF,EAAOI,gBAAQ,IAAAF,OAAV,EAALA,EAAiBI,aACjBN,EAAMO,QAEZ,CAIAjC,EAAU,CAAC,GACXL,GAAa,EAAM,IAEpBuC,OAAOC,IACN,MAAMC,EAAY,CAAC,EACnBD,EAAiBE,MAAMC,SAASZ,IAC9BU,EAAUV,EAAMa,MAAQb,EAAMO,OAAO,IAEvCjC,EAAUoC,EAAU,GACpB,EA2D2D9E,SAAA,EACzDS,EAAAA,EAAAA,MAAA,OAAKZ,UAAWE,EAAmBC,SAAA,CAChCyC,EAAOd,QACN/B,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAcC,SAAEyC,EAAOd,SAEzC/B,EAAAA,EAAAA,KAAA,SACEC,UAAS,GAAAC,OAAKC,EAAa,KAAAD,OACC,KAApB,OAAN2C,QAAM,IAANA,GAAa,QAAPT,EAANS,EAAQd,aAAK,IAAAK,OAAP,EAANA,EAAelE,SAA0B,UAAVwC,EAC3BP,EACA,GAAE,uHAKRwB,KAAK,QACL2D,KAAK,QACLC,YAAY,QACZC,MAAO7C,EAASZ,MAChB0D,SAxHejE,IACzB,MAAM,KAAE8D,EAAI,MAAEE,GAAUhE,EAAEzD,OAC1B6E,EAAY,IACPD,EACH,CAAC2C,GAAOE,IAEV1C,EAAU,IACLD,EACH,CAACyC,GAAO,IACR,EAgHQI,OAAQA,IA3EDtB,WACjB,UACQxC,EAAO+D,WAAWlC,EAAOd,GAC/BG,GAAW8C,IAAU,IAChBA,EACH,CAACnC,GAAQ,MAEb,CAAE,MAAOoC,GACFA,EAAgBd,QAMnBjC,GAAW8C,IAAU,IAChBA,EACH,CAACnC,GAAQoC,EAAgBd,YAP3BjC,GAAW8C,IAAU,IAChBA,EACH,CAACnC,GAAQ,mBAQf,GAwDwBqC,CAAW,SACzBC,MAAO,CACLC,YAAaxC,EAAe,SAC5ByC,MAAOzC,EAAe,aAGnB,OAANX,QAAM,IAANA,GAAa,QAAPR,EAANQ,EAAQd,aAAK,IAAAM,OAAP,EAANA,EAAenE,QAAS,GACvB8B,EAAAA,EAAAA,KAAA,OAAK6D,IAAKqC,EAAAA,EAAgBpC,IAAI,GAAG7D,UAAWE,IAE5C,OAGJU,EAAAA,EAAAA,MAAA,OAAKZ,UAAWE,EAAkBC,SAAA,CAC/B,KACDJ,EAAAA,EAAAA,KAACmG,EAAAA,EAAM,CACLtG,MAAM,aACN8B,KAAK,SACL5B,UAAUyC,eAcjB,EClMP,EARqB4D,KAEjBpG,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAACkC,EAAY,K,gDCHZ,MAAMyC,EAAcI,IACzBsB,EAAAA,GAAM7B,MAAM,GAADtE,OAAI6E,GAAW,CACxBuB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVnG,MAAO,SACP,C,uDCTG,MAAM6D,EAAYQ,KACvBsB,EAAAA,EAAAA,IAAM,GAADnG,OAAI6E,GAAW,CAClBuB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVnG,MAAO,SACP,C","sources":["assets/icons/arrow_left.svg","assets/icons/circle-exclamation-mark.svg","webpack://nola/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://nola/./src/components/GoBackButton/GoBackButton.module.css?1091","components/GoBackButton/GoBackButton.jsx","webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://nola/./src/components/RecoveryForm/RecoveryForm.module.css?230e","components/RecoveryForm/RecoveryForm.jsx","pages/RecoveryPage/RecoveryPage.jsx","services/ToastError/ToastError.js","services/Toastify/Toastify.js"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.3333 28H39.6666\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.6666 18.6667L16.3333 28.0001L25.6666 37.3334\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow_left.79cbc6f596f7d227f8c314b9a6ec80fb.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _circle, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCircleExclamationMark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 10.0067V10\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8.00008,\n    cy: 8.00008,\n    r: 4.83333,\n    stroke: \"#DA2E2E\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 6V8.33333\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCircleExclamationMark);\nexport default __webpack_public_path__ + \"static/media/circle-exclamation-mark.17ba79873a47e9a43cf4f3584ca4f5b5.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"Button_buttonForm__X-24B\",\"disabled\":\"Button_disabled__jvels\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ label, onClick, disabled }) => {\r\n  return (\r\n    <button className={`${css.buttonForm} ${disabled ? css.disabled : \"\"}`} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"GoBackButton_goBack__sMPM4\",\"titleRecovery\":\"GoBackButton_titleRecovery__jxfe9\",\"iconDark\":\"GoBackButton_iconDark__ngklm\"};","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport css from \"./GoBackButton.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useCustomContext } from \"../../services/Context/Context\";\r\nimport { ReactComponent as Icon_Back } from \"../../assets/icons/arrow_left.svg\";\r\n\r\nconst GoBackButton = ({\r\n  to,\r\n  title,\r\n  imgSrc,\r\n  imgAlt,\r\n  imgWidth,\r\n  imgHeight,\r\n  onClick,\r\n}) => {\r\n  const { theme, setTheme } = useCustomContext();\r\n  return (\r\n    <div className={css.goBack}>\r\n      <Link\r\n        to={to}\r\n        onClick={onClick}\r\n        className={theme === \"dark\" ? css.iconDark : \"\"}\r\n      >\r\n        <Icon_Back />\r\n      </Link>\r\n      <h3 className={`${css.titleRecovery} dark:text-white`}>{title}</h3>\r\n    </div>\r\n  );\r\n};\r\nGoBackButton.propTypes = {\r\n  to: PropTypes.string,\r\n  title: PropTypes.string,\r\n  imgSrc: PropTypes.string,\r\n  imgAlt: PropTypes.string,\r\n  imgWidth: PropTypes.string,\r\n  imgHeight: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default GoBackButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__2bCFe\",\"modal\":\"Modal_modal__RKlRu\",\"children\":\"Modal_children__HRgbz\",\"modal_title\":\"Modal_modal_title__G832Y\",\"modal_descr\":\"Modal_modal_descr__c95fw\",\"modal_btn\":\"Modal_modal_btn__IQX72\",\"modal_text\":\"Modal_modal_text__UI4b5\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({\r\n  confirm,\r\n  cancel,\r\n  title,\r\n  description,\r\n  handleToggleModal,\r\n  btn_text_confirm = \"Confirm\",\r\n  btn_text_cancel = \"Cancel\",\r\n  childrenEl = false,\r\n  children,\r\n}) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div className={css.children}>\r\n          {childrenEl ? (\r\n            children\r\n          ) : (\r\n            <>\r\n              <h2 className={css.modal_title}>{title}</h2>\r\n              <p className={css.modal_descr}>{description}</p>\r\n\r\n              <button type=\"button\" className={css.modal_btn} onClick={confirm}>\r\n                {btn_text_confirm}\r\n              </button>\r\n              <p\r\n                type=\"button\"\r\n                className={`${css.modal_text} dark:text-white`}\r\n                onClick={cancel}\r\n              >\r\n                {btn_text_cancel}\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  childrenEl: PropTypes.bool,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  confirm: PropTypes.func,\r\n  cancel: PropTypes.func,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  btn_text_confirm: PropTypes.string,\r\n  btn_text_cancel: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RecoveryForm_container__6tM-U\",\"imageForm\":\"RecoveryForm_imageForm__tgJ2R\",\"titleForm\":\"RecoveryForm_titleForm__ARL8p\",\"infoForm\":\"RecoveryForm_infoForm__lbOCF\",\"formContainer\":\"RecoveryForm_formContainer__xywet\",\"inputForm\":\"RecoveryForm_inputForm__wMh5B\",\"active\":\"RecoveryForm_active__beG0C\",\"goBack\":\"RecoveryForm_goBack__2JgZx\",\"titleRecovery\":\"RecoveryForm_titleRecovery__aZ51F\",\"inputContainer\":\"RecoveryForm_inputContainer__3qUSd\",\"errorText\":\"RecoveryForm_errorText__zr4ma\",\"img_error\":\"RecoveryForm_img_error__8vphM\",\"btn_container\":\"RecoveryForm_btn_container__6sxi1\"};","import React, { useState } from \"react\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\nimport Button from \"../Button\";\r\nimport css from \"./RecoveryForm.module.css\";\r\nimport * as yup from \"yup\";\r\nimport email from \"../../assets/images/sendEmail.png\";\r\nimport errorAttention from \"../../assets/icons/circle-exclamation-mark.svg\";\r\nimport GoBackButton from \"../GoBackButton/GoBackButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { postForgotPassword } from \"../../services/https/https\";\r\nimport { useCustomContext } from \"../../services/Context/Context\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .matches(/^[^\\s]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^а-яА-ЯіІїЇєЄ]*$/, \"Please enter valid characters\")\r\n    .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,3}$/i,\r\n      \"Mail is not registered in the system. Please try again.\"\r\n    )\r\n    .required(\"Email is required\"),\r\n});\r\n\r\nconst RecoveryForm = () => {\r\n  const navigate = useNavigate();\r\n  const { theme, setTheme } = useCustomContext();\r\n  const [validForm, setValidForm] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isModal, setIsModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const validEmail = [\".com\", \".net\", \".ua\"];\r\n\r\n    if (\r\n      validEmail.find((el) => formData?.email?.includes(el)) &&\r\n       errors?.email?.length === 0\r\n    ) {\r\n      setValidForm(true);\r\n      return;\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [errors, errors?.email?.length, formData?.email]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(async () => {\r\n        try {\r\n          console.log(\"Form submitted with data:\", formData);\r\n          // const data = await postForgotPassword(formData.email);\r\n          Toastify(\"New password sent by email\");\r\n          handleToggleModal();\r\n        } catch (error) {\r\n          console.log(error);\r\n          ToastError(\r\n            error?.response?.data ||\r\n              error?.response?.statusText ||\r\n              error.message\r\n          );\r\n        }\r\n        // setFormData({\r\n        //   email: \"\",\r\n        // });\r\n        setErrors({});\r\n        setValidForm(false);\r\n      })\r\n      .catch((validationErrors) => {\r\n        const newErrors = {};\r\n        validationErrors.inner.forEach((error) => {\r\n          newErrors[error.path] = error.message;\r\n        });\r\n        setErrors(newErrors);\r\n      });\r\n  };\r\n\r\n  const handleBlur = async (field) => {\r\n    try {\r\n      await schema.validateAt(field, formData);\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: \"\",\r\n      }));\r\n    } catch (validationError) {\r\n      if (!validationError.message) {\r\n        setErrors((prevErrors) => ({\r\n          ...prevErrors,\r\n          [field]: \"Invalid value\",\r\n        }));\r\n      } else {\r\n        setErrors((prevErrors) => ({\r\n          ...prevErrors,\r\n          [field]: validationError.message,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/main/authorization\");\r\n  };\r\n\r\n  const getBorderColor = (field) => {\r\n    return errors[field] && \"#ff0000\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className={css.container}>\r\n        <GoBackButton\r\n          imgAlt=\"Go back\"\r\n          imgWidth=\"50px\"\r\n          imgHeight=\"50px\"\r\n          title=\"Password recovery\"\r\n          to=\"/main/authorization\"\r\n          onClick={handleBack}\r\n        />\r\n\r\n        <img src={email} alt=\"Logo\" className={css.imageForm} />\r\n        <h3 className={`${css.titleForm} dark:text-white`}>\r\n          Update your password\r\n        </h3>\r\n        <p className={`${css.infoForm} dark:text-white`}>\r\n          Enter your username or email address and <br />\r\n          select “Send Email”\r\n        </p>\r\n\r\n        <form className={css.formContainer} onSubmit={handleSubmit}>\r\n          <div className={css.inputContainer}>\r\n            {errors.email && (\r\n              <div className={css.errorText}>{errors.email}</div>\r\n            )}\r\n            <input\r\n              className={`${css.inputForm} ${\r\n                errors?.email?.length === 0 && theme === \"light\"\r\n                  ? css.active\r\n                  : \"\"\r\n              }\r\n              secondary_text_style\r\n              dark:bg-black dark:border-white dark:text-white\r\n              `}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"email\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"email\"),\r\n                color: getBorderColor(\"email\"),\r\n              }}\r\n            />\r\n            {errors?.email?.length > 1 ? (\r\n              <img src={errorAttention} alt=\"\" className={css.img_error} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className={css.btn_container}>\r\n            {\" \"}\r\n            <Button\r\n              label=\"Send email\"\r\n              type=\"submit\"\r\n              disabled={validForm ? false : true}\r\n            />\r\n          </div>\r\n        </form>\r\n\r\n        {/* {isModal && (\r\n          <Modal\r\n            handleToggleModal={handleToggleModal}\r\n          >\r\n            <p className={css.modal_title}>New password sent by email </p>\r\n\r\n          </Modal>\r\n        )} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecoveryForm;\r\n","import RecoveryForm from \"../../components/RecoveryForm\";\r\n\r\nconst RecoveryPage = () => {\r\n  return (\r\n    <div>\r\n      <RecoveryForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecoveryPage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const ToastError = (message) => {\r\n  toast.error(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_path","_path2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","label","onClick","disabled","_jsx","className","concat","css","children","to","imgSrc","imgAlt","imgWidth","imgHeight","theme","setTheme","useCustomContext","_jsxs","Link","Icon_Back","Modal","confirm","cancel","description","handleToggleModal","btn_text_confirm","btn_text_cancel","childrenEl","e","currentTarget","_Fragment","type","schema","yup","shape","email","matches","required","RecoveryForm","_errors$email2","_errors$email3","_errors$email4","navigate","useNavigate","validForm","setValidForm","useState","formData","setFormData","errors","setErrors","isModal","setIsModal","useEffect","_errors$email","find","el","_formData$email","includes","prev","getBorderColor","field","ToastContainer","GoBackButton","handleBack","src","alt","onSubmit","preventDefault","validate","abortEarly","then","async","console","log","Toastify","error","_error$response","_error$response2","ToastError","response","data","statusText","message","catch","validationErrors","newErrors","inner","forEach","path","name","placeholder","value","onChange","onBlur","validateAt","prevErrors","validationError","handleBlur","style","borderColor","color","errorAttention","Button","RecoveryPage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}