{"version":3,"file":"static/js/209.3a84c9ae.chunk.js","mappings":"4GACA,QAA2B,wBAA3B,EAA2D,qB,aCEpD,MAAMA,EAAQC,IAAsC,IAArC,SAAEC,EAAQ,kBAAEC,GAAmBF,EAQnD,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,QARHC,IAC3B,MAAM,OAAEC,EAAM,cAAEC,GAAkBF,EAC9BC,IAAWC,GACbP,GACF,EAI2DD,UACzDE,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAM,OAAKL,EAAS,kBAAiBJ,UAC3CE,EAAAA,EAAAA,KAAA,OAAAF,SAAMA,OAEJ,C,0FCZV,MA4BA,EA5B2BU,KACzB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAEjCZ,EAAoBA,KACxBW,GAAYE,IAAUA,GAAK,EAG7B,OACEC,EAAAA,EAAAA,MAAA,OAAAf,SAAA,CAAK,sBAEHE,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAASX,QAASJ,EAAkBD,SAAC,aAGlDe,EAAAA,EAAAA,MAACE,EAAAA,GAAO,CAACC,GAAG,0BAAyBlB,SAAA,EACnCE,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAAQhB,SAAC,WAAgB,OAEvCW,IACCT,EAAAA,EAAAA,KAACJ,EAAAA,EAAK,CACJG,kBAAmBA,EACnBkB,aAAc,0BAA0BnB,UAExCE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,oCAGH,C","sources":["webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","pages/ChangePasswordPage/ChangePasswordPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__2bCFe\",\"modal\":\"Modal_modal__RKlRu\",\"svg\":\"Modal_svg__dYdNt\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({ children, handleToggleModal }) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from \"react\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ChangePasswordPage = () => {\r\n  const [isModal, setIsModal] = useState(false);\r\n\r\n  const handleToggleModal = () => {\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      ChangePasswordPage\r\n      <button type=\"button\" onClick={handleToggleModal}>\r\n        Confirm\r\n      </button>\r\n      <NavLink to=\"/main/settingAdverticer\">\r\n        <button type=\"button\">Cancel</button>{\" \"}\r\n      </NavLink>\r\n      {isModal && (\r\n        <Modal\r\n          handleToggleModal={handleToggleModal}\r\n          navigatePage={\"/main/settingAdverticer\"}\r\n        >\r\n          <p>Sucsessfull change password</p>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordPage;\r\n"],"names":["Modal","_ref","children","handleToggleModal","_jsx","className","css","onClick","e","target","currentTarget","concat","ChangePasswordPage","isModal","setIsModal","useState","prev","_jsxs","type","NavLink","to","navigatePage"],"sourceRoot":""}