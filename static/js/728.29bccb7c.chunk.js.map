{"version":3,"file":"static/js/728.29bccb7c.chunk.js","mappings":"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","sources":["webpack://nola/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://nola/./src/components/GoogleButton/GoogleAndAppleButton.module.css?1a24","components/GoogleButton/GoogleAndAppleButton.jsx","webpack://nola/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx","services/ToastError/ToastError.js","services/Toastify/Toastify.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"Button_buttonForm__X-24B\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ label, onClick, disabled }) => {\r\n  return (\r\n    <button className={css.buttonForm} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"GoogleAndAppleButton_buttonContainer__zj53l\",\"buttonForm\":\"GoogleAndAppleButton_buttonForm__oc1w0\",\"separatorLine\":\"GoogleAndAppleButton_separatorLine__cnFHu\",\"orText\":\"GoogleAndAppleButton_orText__Z9Coz\",\"icon\":\"GoogleAndAppleButton_icon__lP+55\"};","import React from \"react\";\r\nimport { FaApple } from \"react-icons/fa\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport css from \"./GoogleAndAppleButton.module.css\";\r\n\r\nconst GoogleAndAppleButton = () => {\r\n  const handleContinueWithApple = () => {\r\n    console.log(\"Continue with Apple clicked\");\r\n  };\r\n\r\n  const handleContinueWithGoogle = () => {\r\n    console.log(\"Continue with Google clicked\");\r\n  };\r\n\r\n  return (\r\n    <div className={css.buttonContainer}>\r\n      <div className={css.separatorLine}></div>\r\n      <div className={`${css.orText} dark:bg-black`}>or</div>\r\n\r\n      <button className={css.buttonForm} onClick={handleContinueWithApple}>\r\n        <FaApple className={css.icon} />\r\n        Continue with Apple\r\n      </button>\r\n\r\n      <button className={css.buttonForm} onClick={handleContinueWithGoogle}>\r\n        <FcGoogle className={css.icon} />\r\n        Continue with Google\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAndAppleButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"RegistrationForm_inputForm__0Pd3p\",\"textInfo\":\"RegistrationForm_textInfo__qppjF\",\"spanPolicy\":\"RegistrationForm_spanPolicy__WZvgi\",\"inputContainer\":\"RegistrationForm_inputContainer__Xna0O\",\"passwordInputContainer\":\"RegistrationForm_passwordInputContainer__Nbmix\",\"eyeIcon\":\"RegistrationForm_eyeIcon__csh0a\",\"errorText\":\"RegistrationForm_errorText__2xzzs\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport css from \"./RegistrationForm.module.css\";\r\nimport Button from \"../Button\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport * as yup from \"yup\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerThunk } from \"../../redux/auth/authThunk\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .matches(/^[^\\s]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^а-яА-ЯіІїЇєЄ]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Please enter a valid email address\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password must be at least 6 characters\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Confirm Password is required\")\r\n    .min(6, \"Confirm Password must be at least 6 characters\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst RegistrationForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {}, [errors]);\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: \"\",\r\n    });\r\n  };\r\n\r\n  const handleTogglePassword = (field) => {\r\n    if (field === \"password\") {\r\n      setShowPassword(!showPassword);\r\n    } else if (field === \"confirmPassword\") {\r\n      setShowConfirmPassword(!showConfirmPassword);\r\n    }\r\n  };\r\n\r\n  const handleBlur = async (field) => {\r\n    try {\r\n      await schema.validateAt(field, formData);\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: \"\",\r\n      }));\r\n    } catch (validationError) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: validationError.message,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const getBorderColor = (field) => {\r\n    return errors[field] ? \"#ff0000\" : \"#9e9e9e\";\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(async () => {\r\n        console.log(\"Form submitted with data:\", formData);\r\n\r\n        try {\r\n          await dispatch(registerThunk(formData)).unwrap();\r\n          Toastify(\"Registration sucsessfull\");\r\n          navigate(\"/main/accountAdverticer\");\r\n        } catch (error) {\r\n          ToastError(error);\r\n        }\r\n        setFormData({\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        });\r\n        // setErrors({});\r\n      })\r\n      .catch((validationErrors) => {\r\n        const errorsMap = {};\r\n        validationErrors.inner.forEach((error) => {\r\n          errorsMap[error.path] = error.message;\r\n        });\r\n        setErrors(errorsMap);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={css.inputContainer}>\r\n          {errors.email && <div className={css.errorText}>{errors.email}</div>}\r\n          <input\r\n            className={css.inputForm}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            onBlur={() => handleBlur(\"email\")}\r\n            style={{ borderColor: getBorderColor(\"email\") }}\r\n          />\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.password && (\r\n            <div className={css.errorText}>{errors.password}</div>\r\n          )}\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}`}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"password\")}\r\n              style={{ borderColor: getBorderColor(\"password\") }}\r\n            />\r\n\r\n            <div\r\n              className={css.eyeIcon}\r\n              onClick={() => handleTogglePassword(\"password\")}\r\n            >\r\n              {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.confirmPassword && (\r\n            <div className={css.errorText}>{errors.confirmPassword}</div>\r\n          )}\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}`}\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"confirmPassword\")}\r\n              style={{ borderColor: getBorderColor(\"confirmPassword\") }}\r\n            />\r\n\r\n            <div\r\n              className={css.eyeIcon}\r\n              onClick={() => handleTogglePassword(\"confirmPassword\")}\r\n            >\r\n              {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <p className={css.textInfo}>\r\n          *By clicking the Register button, I agree to the\r\n          <span className={css.spanPolicy}>Privacy Policy</span> and give my\r\n          consent to data processing\r\n        </p>\r\n        <Button label=\"Register\" type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import RegistrationForm from \"../../components/RegistrationForm\";\r\nimport GoogleAndAppleButton from \"../../components/GoogleButton/GoogleAndAppleButton\";\r\n\r\nconst RegistrationPage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <RegistrationForm />\r\n      <GoogleAndAppleButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const ToastError = (message) => {\r\n  toast.error(`${message}`, {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_ref","label","onClick","disabled","_jsx","className","css","children","GoogleAndAppleButton","_jsxs","concat","handleContinueWithApple","console","log","FaApple","handleContinueWithGoogle","FcGoogle","schema","yup","shape","email","matches","required","password","min","confirmPassword","oneOf","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","formData","setFormData","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","errors","setErrors","useEffect","handleInputChange","e","name","value","target","handleTogglePassword","field","handleBlur","async","validateAt","prevErrors","validationError","message","getBorderColor","_Fragment","ToastContainer","onSubmit","preventDefault","validate","abortEarly","then","registerThunk","unwrap","Toastify","error","ToastError","catch","validationErrors","errorsMap","inner","forEach","path","inputContainer","errorText","inputForm","type","placeholder","onChange","onBlur","style","borderColor","passwordInputContainer","passwordInput","eyeIcon","FaEyeSlash","FaEye","textInfo","spanPolicy","Button","RegistrationPage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}