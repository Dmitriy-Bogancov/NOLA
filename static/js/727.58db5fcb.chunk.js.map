{"version":3,"file":"static/js/727.58db5fcb.chunk.js","mappings":"gKAMO,MAAMA,EAAmBC,IAAgC,IAA/B,QAAEC,EAAO,aAAEC,GAAcF,EACxD,MAAMG,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,GAAS,GAADC,OAAIN,IACZO,YAAW,KACTL,EAASD,EAAc,CAAEO,SAAS,GAAO,GACvC,IAAK,GACR,CAACR,EAASE,EAAUD,KAEhBQ,EAAAA,EAAAA,KAACC,EAAAA,GAAc,GAAG,C,+CCf3B,QAAgC,oCAAhC,EAA0E,0BAA1E,EAAiH,iCAAjH,EAA6J,+BAA7J,EAA8M,sC,6FCQ9M,MAkFA,EAlFqBC,MACFC,EAAAA,EAAAA,OACAT,EAAAA,EAAAA,MADjB,MAEMU,GAASC,EAAAA,EAAAA,OACRC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAMC,IAAWJ,EAAAA,EAAAA,UACN,IAAhBC,EAAKI,QAAgB,CACnBC,YAAa,GACbC,MAAO,GACPC,SAAU,CAAEC,MAAO,KAAMF,MAAO,IAChCG,YAAa,CAAED,MAAO,KAAMF,MAAO,IACnCI,aAAoB,YACpBC,kBAAmB,GACnBC,QAAS,MAIb1B,EAAAA,EAAAA,YAAU,KACQ,WACd,IACE,MAAMc,QAAaa,EAAAA,EAAAA,IAAWlB,EAAOmB,YACrCb,EAAQD,EACV,CAAE,MAAOe,GACPC,QAAQC,IAAIF,EACd,CACD,EAPe,GAShBG,aAAaC,QAAQ,cAAeC,KAAKC,UAAUnB,GAAM,GACxD,CAACP,EAAQO,IAqBZ,OACEoB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,gBAEHhC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,IACdK,IACCN,EAAAA,EAAAA,KAACX,EAAAA,EAAgB,CACfE,QAAS,+BACTC,aAAc,6BAGlBQ,EAAAA,EAAAA,KAAA,OAAAgC,UACED,EAAAA,EAAAA,MAAA,QAAME,SAtBaC,UACvBC,EAAEC,iBACF7B,GAAc,GACdkB,QAAQC,IAAI,WAAYf,GACxB,UACQ0B,EAAAA,EAAAA,IAAa1B,EAAK2B,GAAI3B,EAC9B,CAAE,MAAOa,IACPe,EAAAA,EAAAA,GAAWf,EAAMjC,QACnB,GAcqCyC,SAAA,EAE/BhC,EAAAA,EAAAA,KAACwC,EAAAA,EAAU,CAAC7B,KAAMA,EAAMC,QAASA,KAEjCmB,EAAAA,EAAAA,MAAA,OAAKU,UAAWC,EAAkBV,SAAA,EAChChC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAO,CAACC,GAAG,oCAAmCZ,UAC7ChC,EAAAA,EAAAA,KAAA,UAAQ6C,KAAK,SAASJ,UAAWC,EAAQV,UACvChC,EAAAA,EAAAA,KAAA,QAAMyC,UAAWC,EAAaV,SAAC,kBAInChC,EAAAA,EAAAA,KAAA,UAAQ6C,KAAK,SAASJ,UAAS,GAAA5C,OAAK6C,EAAO,KAAA7C,OAAI6C,GAAiBV,UAC9DhC,EAAAA,EAAAA,KAAA,QAAMyC,UAAWC,EAAoBV,SAAC,wBAK1C,C,uDCpFH,MAAMpC,EAAYL,KACvBuD,EAAAA,EAAAA,IAAM,GAADjD,OAAIN,GAAW,CAClBwD,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SACP,C","sources":["components/HandleFormConfig/HandleFormConfig.jsx","webpack://nola/./src/pages/EditPostPage/EditPostPage.module.css?dcc4","pages/EditPostPage/EditPostPage.jsx","services/Toastify/Toastify.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { useEffect } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport const HandleFormConfig = ({ message, navigatePage }) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    Toastify(`${message}`);\r\n    setTimeout(() => {\r\n      navigate(navigatePage, { replace: true })\r\n    },  3000);\r\n  }, [message, navigate, navigatePage]);\r\n\r\n  return <ToastContainer />;\r\n};\r\n\r\nHandleFormConfig.propTypes = {\r\n  message: PropTypes.string,\r\n  navigatePage: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn_container\":\"EditPostPage_btn_container__5Gfsr\",\"btn\":\"EditPostPage_btn__Ehyf4\",\"btn_active\":\"EditPostPage_btn_active__jEvhf\",\"btn_back\":\"EditPostPage_btn_back__ldWV9\",\"btn_back_active\":\"EditPostPage_btn_back_active__FQlUF\"};","import css from \"./EditPostPage.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { NavLink, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getPostApi, patchPostApi } from \"../../services/https/https\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { HandleFormConfig } from \"../../components/HandleFormConfig/HandleFormConfig\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { CreatePost } from \"../../components/CreatePost/CreatePost\";\r\n\r\nconst EditPostPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [formConfig, setFormConfig] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [post, setPost] = useState(\r\n    data.length !== 0 || {\r\n      description: \"\",\r\n      title: \"\",\r\n      category: { index: null, title: \"\" },\r\n      subcategory: { index: null, title: \"\" },\r\n      callToAction: \"\" || \"Read more\",\r\n      callToActionLinks: \"\",\r\n      banners: [],\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getData = (async () => {\r\n      try {\r\n        const data = await getPostApi(params.editPostId);\r\n        setData(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n\r\n    localStorage.setItem(\"previewPost\", JSON.stringify(post));\r\n  }, [params, post]);\r\n\r\n  const handleChangePost = ({ target }) => {\r\n    const { name, value } = target;\r\n    setPost({\r\n      ...post,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmitPost = async (e) => {\r\n    e.preventDefault();\r\n    setFormConfig(true); // delete later\r\n    console.log(\"editPost\", post);\r\n    try {\r\n      await patchPostApi(post.id, post);\r\n    } catch (error) {\r\n      ToastError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      EditPostPage\r\n      <ToastContainer />\r\n      {formConfig && (\r\n        <HandleFormConfig\r\n          message={\"Current post has been edited\"}\r\n          navigatePage={\"/main/accountAdverticer\"}\r\n        />\r\n      )}\r\n      <div>\r\n        <form onSubmit={handleSubmitPost}>\r\n          {/* post={data} setPost={setData} */}\r\n          <CreatePost post={post} setPost={setPost} />\r\n\r\n          <div className={css.btn_container}>\r\n            <NavLink to=\"/main/addPost/previewAdvertisemet\">\r\n              <button type=\"button\" className={css.btn}>\r\n                <span className={css.btn_back}> Preview</span>\r\n              </button>\r\n            </NavLink>\r\n\r\n            <button type=\"submit\" className={`${css.btn} ${css.btn_active}`}>\r\n              <span className={css.btn_back_active}>Publish</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPostPage;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["HandleFormConfig","_ref","message","navigatePage","navigate","useNavigate","useEffect","Toastify","concat","setTimeout","replace","_jsx","ToastContainer","EditPostPage","useLocation","params","useParams","formConfig","setFormConfig","useState","data","setData","post","setPost","length","description","title","category","index","subcategory","callToAction","callToActionLinks","banners","getPostApi","editPostId","error","console","log","localStorage","setItem","JSON","stringify","_jsxs","children","onSubmit","async","e","preventDefault","patchPostApi","id","ToastError","CreatePost","className","css","NavLink","to","type","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}