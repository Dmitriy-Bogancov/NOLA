{"version":3,"file":"static/js/5528.e3503f06.chunk.js","mappings":"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","sources":["webpack://nola/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://nola/./src/pages/SavedPostsPage/SavedPostsPage.module.css?e083","assets/icons/saved_icon.svg","pages/SavedPostsPage/SavedPostsPage.jsx","services/Toastify/Toastify.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__2bCFe\",\"modal\":\"Modal_modal__RKlRu\",\"children\":\"Modal_children__HRgbz\",\"modal_title\":\"Modal_modal_title__G832Y\",\"modal_descr\":\"Modal_modal_descr__c95fw\",\"modal_btn\":\"Modal_modal_btn__IQX72\",\"modal_text\":\"Modal_modal_text__UI4b5\"};","import css from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Modal = ({\r\n  confirm,\r\n  cancel,\r\n  title,\r\n  description,\r\n  info,\r\n  handleToggleModal,\r\n  btn_text_confirm = \"Confirm\",\r\n  btn_text_cancel = \"Cancel\",\r\n  childrenEl = false,\r\n  children,\r\n}) => {\r\n  const handleCloseBackdrop = (e) => {\r\n    const { target, currentTarget } = e;\r\n    if (target === currentTarget) {\r\n      handleToggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={css.backdrop} onClick={handleCloseBackdrop}>\r\n      <div className={`${css.modal} dark:bg-black`}>\r\n        <div className={css.children}>\r\n          {childrenEl ? (\r\n            children\r\n          ) : (\r\n            <>\r\n              <h2 className={css.modal_title}>{title}</h2>\r\n              <p className={css.modal_descr}>{description}</p>\r\n              {info ? <p className={css.modal_descr}>{info}</p> : \"\"}\r\n              <button type=\"button\" className={css.modal_btn} onClick={confirm}>\r\n                {btn_text_confirm}\r\n              </button>\r\n              <p\r\n                type=\"button\"\r\n                className={`${css.modal_text} dark:text-white`}\r\n                onClick={cancel}\r\n              >\r\n                {btn_text_cancel}\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  childrenEl: PropTypes.string,\r\n  handleToggleModal: PropTypes.func.isRequired,\r\n  confirm: PropTypes.func,\r\n  cancel: PropTypes.func,\r\n  title: PropTypes.string,\r\n  info: PropTypes.string,\r\n  description: PropTypes.string,\r\n  btn_text_confirm: PropTypes.string,\r\n  btn_text_cancel: PropTypes.string,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"SavedPostsPage_title__F2ODv\",\"list\":\"SavedPostsPage_list__NNuIS\",\"item\":\"SavedPostsPage_item__pAjPL\",\"img\":\"SavedPostsPage_img__FcHGU\",\"item_footer\":\"SavedPostsPage_item_footer__qDBam\",\"logo_icon\":\"SavedPostsPage_logo_icon__o+dOQ\",\"item_description\":\"SavedPostsPage_item_description__7wFVZ\",\"item_btn\":\"SavedPostsPage_item_btn__L8KD-\",\"iconDark\":\"SavedPostsPage_iconDark__M-xTh\",\"container\":\"SavedPostsPage_container__S6930\",\"title_empty\":\"SavedPostsPage_title_empty__tc2LC\",\"description\":\"SavedPostsPage_description__fHYxt\"};","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSavedIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 19,\n    viewBox: \"0 0 14 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 0.19043H2C0.9 0.19043 0 1.09043 0 2.19043V18.1904L7 15.1904L14 18.1904V2.19043C14 1.09043 13.1 0.19043 12 0.19043Z\",\n    fill: \"#666666\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSavedIcon);\nexport default __webpack_public_path__ + \"static/media/saved_icon.1ad2907db1b3487ea7b9246bcd25daad.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink, useLocation } from \"react-router-dom\";\r\nimport css from \"./SavedPostsPage.module.css\";\r\nimport { ReactComponent as Save_Icon } from \"../../assets/icons/saved_icon.svg\";\r\nimport { useState } from \"react\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Modal } from \"../../components/Modal/Modal\";\r\nimport { useCustomContext } from \"../../services/Context/Context\";\r\n\r\nconst LOKAL_KEY = \"savedPost\";\r\n\r\nconst SavedPostsPage = () => {\r\n  const location = useLocation();\r\n  const { theme, setTheme } = useCustomContext();\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [isDeletePost, setDeletePost] = useState(\"\");\r\n  const [posts, setPosts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(LOKAL_KEY));\r\n  });\r\n\r\n  const [savedPostId, setSavedPostId] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"savedPostId\")) ?? [];\r\n  });\r\n\r\n  const handleToggleModal = (message) => {\r\n    setDeletePost(message);\r\n    setIsModal((prev) => !prev);\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    const savedPost = posts.filter((post) => post.id !== postId);\r\n\r\n    const deleteostId = posts.filter((post) => post.id === postId);\r\n    const [deleteId] = deleteostId.map(({ id }) => id);\r\n    const deletePostId = savedPostId.filter((el) => el !== deleteId);\r\n\r\n    setPosts(savedPost);\r\n    setSavedPostId(deletePostId);\r\n\r\n    localStorage.setItem(\"savedPostId\", JSON.stringify(deletePostId));\r\n    localStorage.setItem(LOKAL_KEY, JSON.stringify(savedPost));\r\n\r\n    Toastify(\"Post has been deleted\");\r\n    handleToggleModal();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <h1 className={css.title}>My saved</h1>\r\n\r\n      {posts?.length > 0 ? (\r\n        <ul className={css.list}>\r\n          {posts.map((post) => (\r\n            <li key={post.id} className={css.item}>\r\n              <NavLink to={`/main/${post.id}`} state={{ from: location }}>\r\n                <img src={post.banners} alt=\"\" className={css.img} />\r\n              </NavLink>\r\n              <div className={css.item_footer}>\r\n                <NavLink to=\"/:advertiserId\" className={css.item_footer}>\r\n                  <div>\r\n                    <img src=\"\" alt=\"\" className={css.logo_icon} />\r\n                  </div>\r\n\r\n                  <p className={`${css.item_description} dark:text-white`}>\r\n                    {post.title}\r\n                  </p>\r\n                </NavLink>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`${css.item_btn} ${\r\n                    theme === \"dark\" ? css.iconDark : \"\"\r\n                  }`}\r\n                  onClick={\r\n                    () => handleToggleModal(post.id)\r\n                    // onClick={() => handleDeletePost(post.id)\r\n                  }\r\n                >\r\n                  <Save_Icon />\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <div className={css.container}>\r\n          <h2 className={`${css.title_empty} dark:text-white`}>\r\n            This list is empty\r\n          </h2>\r\n          <p className={`${css.description} dark:text-white`}>\r\n            Add something you`ve liked from the main page\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {isModal && (\r\n        <Modal\r\n          handleToggleModal={handleToggleModal}\r\n          title=\"Are you sure you want to delete?\"\r\n          confirm={() => handleDeletePost(isDeletePost)}\r\n          cancel={handleToggleModal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavedPostsPage;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["Modal","_ref","confirm","cancel","title","description","info","handleToggleModal","btn_text_confirm","btn_text_cancel","childrenEl","children","_jsx","className","css","onClick","e","target","currentTarget","concat","_jsxs","_Fragment","type","_path","_extends","Object","assign","bind","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgSavedIcon","svgRef","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","LOKAL_KEY","SavedPostsPage","location","useLocation","theme","setTheme","useCustomContext","isModal","setIsModal","useState","isDeletePost","setDeletePost","posts","setPosts","JSON","parse","localStorage","getItem","savedPostId","setSavedPostId","_JSON$parse","message","prev","ToastContainer","map","post","NavLink","to","state","from","src","banners","alt","Save_Icon","postId","savedPost","filter","deleteostId","deleteId","deletePostId","el","setItem","stringify","Toastify","handleDeletePost","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}