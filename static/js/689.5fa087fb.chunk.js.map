{"version":3,"file":"static/js/689.5fa087fb.chunk.js","mappings":"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","sources":["assets/icons/circle-exclamation-mark.svg","webpack://nola/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://nola/./src/components/GoogleButton/GoogleAndFacebookButton.module.css?e16a","components/GoogleButton/GoogleAndFacebookButton.jsx","webpack://nola/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx","services/Toastify/Toastify.js"],"sourcesContent":["var _path, _circle, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCircleExclamationMark(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 10.0067V10\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8.00008,\n    cy: 8.00008,\n    r: 4.83333,\n    stroke: \"#DA2E2E\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 6V8.33333\",\n    stroke: \"#DA2E2E\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCircleExclamationMark);\nexport default __webpack_public_path__ + \"static/media/circle-exclamation-mark.17ba79873a47e9a43cf4f3584ca4f5b5.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"buttonForm\":\"Button_buttonForm__X-24B\",\"disabled\":\"Button_disabled__jvels\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ label, onClick, disabled }) => {\r\n  return (\r\n    <button className={`${css.buttonForm} ${disabled ? css.disabled : \"\"}`} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"GoogleAndFacebookButton_buttonContainer__XOS+G\",\"buttonForm\":\"GoogleAndFacebookButton_buttonForm__fboKs\",\"separatorLine\":\"GoogleAndFacebookButton_separatorLine__CUteA\",\"orText\":\"GoogleAndFacebookButton_orText__7CdpK\",\"icon\":\"GoogleAndFacebookButton_icon__KaLHd\"};","import React, { useState } from \"react\";\r\nimport { FaFacebook } from \"react-icons/fa\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport FacebookLogin from \"@greatsumini/react-facebook-login\";\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport css from \"./GoogleAndFacebookButton.module.css\";\r\nimport {  useGoogleLogin } from \"@react-oauth/google\";\r\n\r\nconst GoogleAndFacebookButton = () => {\r\n  const navigate = useNavigate();\r\n  const [redirect, setRedirect] = useState(false); \r\n\r\n  const googleLogin = useGoogleLogin({\r\n    onSuccess: (tokenResponse) => {\r\n      console.log(\"Google login successful\", tokenResponse);\r\n      setRedirect(true); \r\n      navigate(\"/main/accountAdverticer\");\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Google login failed\", error);\r\n    },\r\n  });\r\n\r\n  const handleFacebookSuccess = (response) => {\r\n    console.log(\"Facebook login successful\", response);\r\n    setRedirect(true); \r\n    navigate(\"/main/accountAdverticer\");\r\n  };\r\n\r\n  const handleFacebookFailure = (error) => {\r\n    console.error(\"Facebook login failed\", error);\r\n  };\r\n\r\n  return (\r\n      <div className={css.buttonContainer}>\r\n        <div className={css.separatorLine}></div>\r\n        <div className={`${css.orText} dark:bg-black`}>or</div>\r\n        <button onClick={() => googleLogin()} className={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}>\r\n          <FcGoogle className={css.icon} />\r\n          Continue with Google\r\n        </button>\r\n        <FacebookLogin\r\n          appId=\"366622046395430\"\r\n          autoLoad={false}\r\n          fields=\"name,email,picture\"\r\n          callback={handleFacebookSuccess}\r\n          onFailure={handleFacebookFailure}\r\n          icon={<FaFacebook className={css.icon}/>} \r\n          textButton=\"Continue with Facebook\"\r\n          className={`${css.buttonForm} dark:bg-black dark:border-white dark:text-white`}\r\n        />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAndFacebookButton;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { FaFacebook } from \"react-icons/fa\";\r\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import {jwtDecode} from \"jwt-decode\";\r\n// import css from \"./GoogleAndFacebookButton.module.css\";\r\n// import { FcGoogle } from \"react-icons/fc\";\r\n\r\n// const GoogleAndFacebookButton = () => {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated) {\r\n//       navigate(\"/main/accountAdverticer\");\r\n//     }\r\n//   }, [isAuthenticated, navigate]);\r\n\r\n//   const handleGoogleSuccess = (credentialResponse) => {\r\n//     try {\r\n//       const token = jwtDecode(credentialResponse.credential);\r\n//       console.log(\"Google login successful\", token);\r\n//       setIsAuthenticated(true);\r\n//     } catch (error) {\r\n//       console.error(\"Failed to decode Google token\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleFailure = (error) => {\r\n//     console.error(\"Google login failed\", error);\r\n//   };\r\n\r\n//   const handleFacebookSuccess = (response) => {\r\n//     try {\r\n//       console.log(\"Facebook login successful\", response);\r\n//       setIsAuthenticated(true);\r\n//     } catch (error) {\r\n//       console.error(\"Failed to process Facebook response\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFacebookFailure = (error) => {\r\n//     console.error(\"Facebook login failed\", error);\r\n//   };\r\n\r\n\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId=\"816846792743-3cmg8t2bhfvr19bvu60r65slnrjon8ko.apps.googleusercontent.com\">\r\n//     <div className={css.buttonContainer}>\r\n//       <div className={css.separatorLine}></div>\r\n//       <div className={css.orText}>or</div>\r\n//       <GoogleLogin\r\n//   onSuccess={handleGoogleSuccess}\r\n//   onError={handleGoogleFailure}\r\n// >\r\n//   {({ onClick, disabled }) => (\r\n//     <button className={css.buttonForm} onClick={onClick} disabled={disabled}>\r\n//       <FcGoogle className={css.icon} />\r\n//       Continue with Google\r\n//     </button>\r\n//   )}\r\n// </GoogleLogin>\r\n//       <FacebookLogin\r\n//         appId=\"366622046395430\"\r\n//         autoLoad={false}\r\n//         fields=\"name,email,picture\"\r\n//         callback={handleFacebookSuccess}\r\n//         onFailure={handleFacebookFailure}\r\n//         render={renderProps => (\r\n//           <button onClick={renderProps.onClick} className={css.buttonForm}>\r\n//             <FaFacebook className={css.icon} /> Continue with Facebook\r\n//           </button>\r\n//         )}\r\n//       />\r\n//     </div>\r\n//   </GoogleOAuthProvider>\r\n//   );\r\n// };\r\n\r\n// export default GoogleAndFacebookButton;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"RegistrationForm_inputForm__0Pd3p\",\"active\":\"RegistrationForm_active__dqk7s\",\"textInfo\":\"RegistrationForm_textInfo__qppjF\",\"spanPolicy\":\"RegistrationForm_spanPolicy__WZvgi\",\"inputContainer\":\"RegistrationForm_inputContainer__Xna0O\",\"passwordInputContainer\":\"RegistrationForm_passwordInputContainer__Nbmix\",\"img_error\":\"RegistrationForm_img_error__m0hRd\",\"eyeIcon\":\"RegistrationForm_eyeIcon__csh0a\",\"error\":\"RegistrationForm_error__2sOV-\",\"errorText\":\"RegistrationForm_errorText__2xzzs\",\"errorPlaceholder\":\"RegistrationForm_errorPlaceholder__cc0E3\",\"btn_text\":\"RegistrationForm_btn_text__CE04u\",\"btn_valid\":\"RegistrationForm_btn_valid__lRJ-N\"};","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport css from \"./RegistrationForm.module.css\";\r\nimport Button from \"../Button\";\r\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport * as yup from \"yup\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { ToastError } from \"../../services/ToastError/ToastError\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginThunk, registerThunk } from \"../../redux/auth/authThunk\";\r\nimport { Toastify } from \"../../services/Toastify/Toastify\";\r\nimport error from \"../../assets/icons/circle-exclamation-mark.svg\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .matches(\r\n      /^[a-zA-Z0-9._%+-]+@(gmail\\.com|ukr\\.net|meta\\.ua)$/,\r\n      \"Please enter valid characters\"\r\n    )\r\n    .matches(/^[^\\s]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^а-яА-ЯіІїЇєЄ]*$/, \"Please enter valid characters\")\r\n    .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Please enter a valid email address\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .matches(RegExp('[!@#$%^&*(),.?\":{}|<>]'), \"Special symbols is required\")\r\n    .matches(/^(?=.*[a-z])/, \" Must Contain One Lowercase Character\")\r\n    .matches(/^(?=.*[A-Z])/, \"  Must Contain One Uppercase Character\")\r\n    .min(8, \"Password must be at least 8 characters\")\r\n    .max(16, \"The password must be no more than 16 characters.\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Confirm Password is required\")\r\n    .matches(RegExp('[!@#$%^&*(),.?\":{}|<>]'), \"Special symbols is required\")\r\n    .matches(/^(?=.*[a-z])/, \" Must Contain One Lowercase Character\")\r\n    .matches(/^(?=.*[A-Z])/, \"  Must Contain One Uppercase Character\")\r\n    .min(8, \"Confirm Password must be at least 8 characters\")\r\n    .max(16, \"The password must be no more than 16 characters.\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n  entityName: yup.string().required(\"Name is required\"),\r\n});\r\n\r\nconst RegistrationForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    entityName: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [validForm, setValidForm] = useState(false);\r\n\r\n  useEffect(() => {}, [errors]);\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      formData.confirmPassword === formData.password &&\r\n      errors?.email?.length === 0 &&\r\n      errors?.password?.length === 0 &&\r\n      errors?.confirmPassword?.length === 0 &&\r\n      errors?.entityName?.length === 0\r\n    ) {\r\n      setValidForm(true);\r\n      return;\r\n    } else {\r\n      setValidForm(false);\r\n    }\r\n  }, [\r\n    errors?.confirmPassword?.length,\r\n    errors?.email?.length,\r\n    errors?.entityName?.length,\r\n    errors?.password?.length,\r\n    formData.confirmPassword,\r\n    formData.password,\r\n  ]);\r\n\r\n  const handleTogglePassword = (field) => {\r\n    if (field === \"password\") {\r\n      setShowPassword(!showPassword);\r\n    } else if (field === \"confirmPassword\") {\r\n      setShowConfirmPassword(!showConfirmPassword);\r\n    }\r\n  };\r\n\r\n  const handleBlur = async (field) => {\r\n    try {\r\n      await schema.validateAt(field, formData);\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: \"\",\r\n      }));\r\n    } catch (validationError) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [field]: validationError.message,\r\n      }));\r\n      setValidForm(false);\r\n    }\r\n  };\r\n\r\n  const getBorderColor = (field) => {\r\n    return errors[field] && \"#da2e2e\";\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(async () => {\r\n        console.log(\"Form submitted with data:\", formData);\r\n\r\n        try {\r\n          await dispatch(registerThunk(formData)).unwrap();\r\n          Toastify(\"Registration sucsessfull\");\r\n          navigate(\"/main/accountAdverticer/adverticerEdit\");\r\n        } catch (error) {\r\n          ToastError(error);\r\n        }\r\n        setFormData({\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          entityName: \"\",\r\n        });\r\n        setErrors({});\r\n        setValidForm(false);\r\n      })\r\n      .catch((validationErrors) => {\r\n        const errorsMap = {};\r\n        validationErrors.inner.forEach((error) => {\r\n          errorsMap[error.path] = error.message;\r\n        });\r\n        setErrors(errorsMap);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={css.inputContainer}>\r\n          {errors.email && <div className={css.errorText}>{errors.email}</div>}\r\n          <input\r\n            className={`${css.inputForm}  ${\r\n              errors?.email?.length === 0 ? css.active : \"\"\r\n            }\r\n            ${errors?.email?.length > 0 ? css.errorPlaceholder : \"\"}\r\n             dark:bg-black dark:border-white dark:text-white`}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            onBlur={() => handleBlur(\"email\")}\r\n            style={{\r\n              borderColor: getBorderColor(\"email\"),\r\n              color: getBorderColor(\"email\"),\r\n            }}\r\n          />\r\n\r\n          {errors?.email?.length > 1 ? (\r\n            <img src={error} alt=\"\" className={css.img_error} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.password && (\r\n            <div className={css.errorText}>{errors.password}</div>\r\n          )}\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}  ${\r\n                errors?.password?.length === 0 ? css.active : \"\"\r\n              }\r\n              ${errors?.password?.length > 0 ? css.errorPlaceholder : \"\"}\r\n               dark:bg-black dark:border-white dark:text-white`}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"password\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"password\"),\r\n                color: getBorderColor(\"password\"),\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className={`${css.eyeIcon} ${\r\n                errors?.password?.length > 1 ? css.error : \"\"\r\n              }`}\r\n              onClick={() => handleTogglePassword(\"password\")}\r\n            >\r\n              {!showPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.confirmPassword && (\r\n            <div className={css.errorText}>{errors.confirmPassword}</div>\r\n          )}\r\n          <div className={css.passwordInputContainer}>\r\n            <input\r\n              className={`${css.inputForm} ${css.passwordInput}  ${\r\n                errors?.confirmPassword?.length === 0 ? css.active : \"\"\r\n              }\r\n              ${errors?.confirmPassword?.length > 0 ? css.errorPlaceholder : \"\"}\r\n              dark:bg-black dark:border-white dark:text-white`}\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleInputChange}\r\n              onBlur={() => handleBlur(\"confirmPassword\")}\r\n              style={{\r\n                borderColor: getBorderColor(\"confirmPassword\"),\r\n                color: getBorderColor(\"confirmPassword\"),\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className={`${css.eyeIcon} ${\r\n                errors?.confirmPassword?.length > 1 ? css.error : \"\"\r\n              }`}\r\n              onClick={() => handleTogglePassword(\"confirmPassword\")}\r\n            >\r\n              {!showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={css.inputContainer}>\r\n          {errors.entityName && (\r\n            <div className={css.errorText}>{errors.entityName}</div>\r\n          )}\r\n          <input\r\n            className={`${css.inputForm}  ${\r\n              errors?.entityName?.length === 0 ? css.active : \"\"\r\n            }\r\n              ${\r\n                errors?.entityName?.length > 0 ? css.errorPlaceholder : \"\"\r\n              }           \r\n              dark:bg-black dark:border-white dark:text-white`}\r\n            type=\"text\"\r\n            name=\"entityName\"\r\n            placeholder=\"Name\"\r\n            value={formData.entityName}\r\n            onChange={handleInputChange}\r\n            onBlur={() => handleBlur(\"entityName\")}\r\n            style={{\r\n              borderColor: getBorderColor(\"entityName\"),\r\n              color: getBorderColor(\"entityName\"),\r\n            }}\r\n          />\r\n\r\n          {errors?.entityName?.length > 1 ? (\r\n            <img src={error} alt=\"\" className={css.img_error} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <p className={css.textInfo}>\r\n          *By clicking the Register button, I agree to the\r\n          <NavLink to=\"/main/setting/policyAndPrivecy\">\r\n            <span className={css.spanPolicy}>Privacy Policy</span>\r\n          </NavLink>\r\n          and give my consent to data processing\r\n        </p>\r\n        <div className={`${css.btn_text} ${validForm ? css.btn_valid : \"\"}`}>\r\n          <Button\r\n            label=\"Register\"\r\n            type=\"submit\"\r\n            disabled={validForm ? false : true}\r\n          />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import RegistrationForm from \"../../components/RegistrationForm\";\r\nimport GoogleAndFacebookButton from \"../../components/GoogleButton/GoogleAndFacebookButton\";\r\n\r\nconst RegistrationPage = () => {\r\n  return (\r\n    <div className=\"\">\r\n      <RegistrationForm />\r\n      <GoogleAndFacebookButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const Toastify = (message) => {\r\n  toast(`${message}`, {\r\n    position: \"top-right\",\r\n    autoClose: 2500,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n};\r\n"],"names":["_ref","label","onClick","disabled","_jsx","className","css","children","GoogleAndFacebookButton","navigate","useNavigate","redirect","setRedirect","useState","googleLogin","useGoogleLogin","onSuccess","tokenResponse","console","log","onError","error","_jsxs","FcGoogle","FacebookLogin","appId","autoLoad","fields","callback","response","onFailure","icon","FaFacebook","textButton","schema","yup","shape","email","matches","required","password","RegExp","min","max","confirmPassword","oneOf","entityName","RegistrationForm","_errors$confirmPasswo2","_errors$email2","_errors$entityName2","_errors$password2","_errors$email3","_errors$email4","_errors$email5","_errors$password3","_errors$password4","_errors$password5","_errors$confirmPasswo3","_errors$confirmPasswo4","_errors$confirmPasswo5","_errors$entityName3","_errors$entityName4","_errors$entityName5","dispatch","useDispatch","formData","setFormData","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","errors","setErrors","validForm","setValidForm","useEffect","handleInputChange","e","name","value","target","_errors$email","_errors$password","_errors$confirmPasswo","_errors$entityName","length","handleTogglePassword","field","handleBlur","async","validateAt","prevErrors","validationError","message","getBorderColor","_Fragment","ToastContainer","onSubmit","preventDefault","validate","abortEarly","then","registerThunk","unwrap","Toastify","ToastError","catch","validationErrors","errorsMap","inner","forEach","path","inputContainer","errorText","inputForm","active","errorPlaceholder","type","placeholder","onChange","onBlur","style","borderColor","color","src","alt","img_error","passwordInputContainer","passwordInput","eyeIcon","FaEye","FaEyeSlash","textInfo","NavLink","to","spanPolicy","btn_text","btn_valid","Button","RegistrationPage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}